package k8s.sparkoperator;/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * V1beta2SparkApplicationSpecDriverAffinityNodeAffinityPreference
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-30T13:32" +
        ":37.998Z[Etc/UTC]")
public class V1beta2SparkApplicationSpecDriverAffinityNodeAffinityPreference {

    private List<V1beta2SparkApplicationSpecDriverAffinityNodeAffinityPreferenceMatchExpressions> matchExpressions =
            null;


    private List<V1beta2SparkApplicationSpecDriverAffinityNodeAffinityPreferenceMatchExpressions> matchFields = null;


    public V1beta2SparkApplicationSpecDriverAffinityNodeAffinityPreference matchExpressions(List<V1beta2SparkApplicationSpecDriverAffinityNodeAffinityPreferenceMatchExpressions> matchExpressions) {

        this.matchExpressions = matchExpressions;
        return this;
    }

    public V1beta2SparkApplicationSpecDriverAffinityNodeAffinityPreference addMatchExpressionsItem(V1beta2SparkApplicationSpecDriverAffinityNodeAffinityPreferenceMatchExpressions matchExpressionsItem) {
        if (this.matchExpressions == null) {
            this.matchExpressions = new ArrayList<>();
        }
        this.matchExpressions.add(matchExpressionsItem);
        return this;
    }

    /**
     * Get matchExpressions
     *
     * @return matchExpressions
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<V1beta2SparkApplicationSpecDriverAffinityNodeAffinityPreferenceMatchExpressions> getMatchExpressions() {
        return matchExpressions;
    }


    public void setMatchExpressions(List<V1beta2SparkApplicationSpecDriverAffinityNodeAffinityPreferenceMatchExpressions> matchExpressions) {
        this.matchExpressions = matchExpressions;
    }


    public V1beta2SparkApplicationSpecDriverAffinityNodeAffinityPreference matchFields(List<V1beta2SparkApplicationSpecDriverAffinityNodeAffinityPreferenceMatchExpressions> matchFields) {

        this.matchFields = matchFields;
        return this;
    }

    public V1beta2SparkApplicationSpecDriverAffinityNodeAffinityPreference addMatchFieldsItem(V1beta2SparkApplicationSpecDriverAffinityNodeAffinityPreferenceMatchExpressions matchFieldsItem) {
        if (this.matchFields == null) {
            this.matchFields = new ArrayList<>();
        }
        this.matchFields.add(matchFieldsItem);
        return this;
    }

    /**
     * Get matchFields
     *
     * @return matchFields
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<V1beta2SparkApplicationSpecDriverAffinityNodeAffinityPreferenceMatchExpressions> getMatchFields() {
        return matchFields;
    }


    public void setMatchFields(List<V1beta2SparkApplicationSpecDriverAffinityNodeAffinityPreferenceMatchExpressions> matchFields) {
        this.matchFields = matchFields;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V1beta2SparkApplicationSpecDriverAffinityNodeAffinityPreference v1beta2SparkApplicationSpecDriverAffinityNodeAffinityPreference = (V1beta2SparkApplicationSpecDriverAffinityNodeAffinityPreference) o;
        return Objects.equals(this.matchExpressions,
                v1beta2SparkApplicationSpecDriverAffinityNodeAffinityPreference.matchExpressions) &&
                Objects.equals(this.matchFields,
                        v1beta2SparkApplicationSpecDriverAffinityNodeAffinityPreference.matchFields);
    }

    @Override
    public int hashCode() {
        return Objects.hash(matchExpressions, matchFields);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class V1beta2SparkApplicationSpecDriverAffinityNodeAffinityPreference {\n");
        sb.append("    matchExpressions: ").append(toIndentedString(matchExpressions)).append("\n");
        sb.append("    matchFields: ").append(toIndentedString(matchFields)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

