package k8s.sparkoperator;/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * V1beta2SparkApplicationSpecMonitoringPrometheus
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-30T13:32" +
        ":37.998Z[Etc/UTC]")
public class V1beta2SparkApplicationSpecMonitoringPrometheus {

    private String configFile;


    private String _configuration;


    private String jmxExporterJar;


    private Integer port;


    private String portName;


    public V1beta2SparkApplicationSpecMonitoringPrometheus configFile(String configFile) {

        this.configFile = configFile;
        return this;
    }

    /**
     * Get configFile
     *
     * @return configFile
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getConfigFile() {
        return configFile;
    }


    public void setConfigFile(String configFile) {
        this.configFile = configFile;
    }


    public V1beta2SparkApplicationSpecMonitoringPrometheus _configuration(String _configuration) {

        this._configuration = _configuration;
        return this;
    }

    /**
     * Get _configuration
     *
     * @return _configuration
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getConfiguration() {
        return _configuration;
    }


    public void setConfiguration(String _configuration) {
        this._configuration = _configuration;
    }


    public V1beta2SparkApplicationSpecMonitoringPrometheus jmxExporterJar(String jmxExporterJar) {

        this.jmxExporterJar = jmxExporterJar;
        return this;
    }

    /**
     * Get jmxExporterJar
     *
     * @return jmxExporterJar
     **/
    @ApiModelProperty(required = true, value = "")

    public String getJmxExporterJar() {
        return jmxExporterJar;
    }


    public void setJmxExporterJar(String jmxExporterJar) {
        this.jmxExporterJar = jmxExporterJar;
    }


    public V1beta2SparkApplicationSpecMonitoringPrometheus port(Integer port) {

        this.port = port;
        return this;
    }

    /**
     * Get port
     * minimum: 1024
     * maximum: 49151
     *
     * @return port
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Integer getPort() {
        return port;
    }


    public void setPort(Integer port) {
        this.port = port;
    }


    public V1beta2SparkApplicationSpecMonitoringPrometheus portName(String portName) {

        this.portName = portName;
        return this;
    }

    /**
     * Get portName
     *
     * @return portName
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getPortName() {
        return portName;
    }


    public void setPortName(String portName) {
        this.portName = portName;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V1beta2SparkApplicationSpecMonitoringPrometheus v1beta2SparkApplicationSpecMonitoringPrometheus =
                (V1beta2SparkApplicationSpecMonitoringPrometheus) o;
        return Objects.equals(this.configFile, v1beta2SparkApplicationSpecMonitoringPrometheus.configFile) &&
                Objects.equals(this._configuration, v1beta2SparkApplicationSpecMonitoringPrometheus._configuration) &&
                Objects.equals(this.jmxExporterJar, v1beta2SparkApplicationSpecMonitoringPrometheus.jmxExporterJar) &&
                Objects.equals(this.port, v1beta2SparkApplicationSpecMonitoringPrometheus.port) &&
                Objects.equals(this.portName, v1beta2SparkApplicationSpecMonitoringPrometheus.portName);
    }

    @Override
    public int hashCode() {
        return Objects.hash(configFile, _configuration, jmxExporterJar, port, portName);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class V1beta2SparkApplicationSpecMonitoringPrometheus {\n");
        sb.append("    configFile: ").append(toIndentedString(configFile)).append("\n");
        sb.append("    _configuration: ").append(toIndentedString(_configuration)).append("\n");
        sb.append("    jmxExporterJar: ").append(toIndentedString(jmxExporterJar)).append("\n");
        sb.append("    port: ").append(toIndentedString(port)).append("\n");
        sb.append("    portName: ").append(toIndentedString(portName)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

