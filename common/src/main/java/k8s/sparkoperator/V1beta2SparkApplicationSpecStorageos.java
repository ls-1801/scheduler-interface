package k8s.sparkoperator;/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * V1beta2SparkApplicationSpecStorageos
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-30T13:32" +
        ":37.998Z[Etc/UTC]")
public class V1beta2SparkApplicationSpecStorageos {

    private String fsType;


    private Boolean readOnly;


    private V1beta2SparkApplicationSpecCephfsSecretRef secretRef;


    private String volumeName;


    private String volumeNamespace;


    public V1beta2SparkApplicationSpecStorageos fsType(String fsType) {

        this.fsType = fsType;
        return this;
    }

    /**
     * Get fsType
     *
     * @return fsType
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getFsType() {
        return fsType;
    }


    public void setFsType(String fsType) {
        this.fsType = fsType;
    }


    public V1beta2SparkApplicationSpecStorageos readOnly(Boolean readOnly) {

        this.readOnly = readOnly;
        return this;
    }

    /**
     * Get readOnly
     *
     * @return readOnly
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Boolean getReadOnly() {
        return readOnly;
    }


    public void setReadOnly(Boolean readOnly) {
        this.readOnly = readOnly;
    }


    public V1beta2SparkApplicationSpecStorageos secretRef(V1beta2SparkApplicationSpecCephfsSecretRef secretRef) {

        this.secretRef = secretRef;
        return this;
    }

    /**
     * Get secretRef
     *
     * @return secretRef
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public V1beta2SparkApplicationSpecCephfsSecretRef getSecretRef() {
        return secretRef;
    }


    public void setSecretRef(V1beta2SparkApplicationSpecCephfsSecretRef secretRef) {
        this.secretRef = secretRef;
    }


    public V1beta2SparkApplicationSpecStorageos volumeName(String volumeName) {

        this.volumeName = volumeName;
        return this;
    }

    /**
     * Get volumeName
     *
     * @return volumeName
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getVolumeName() {
        return volumeName;
    }


    public void setVolumeName(String volumeName) {
        this.volumeName = volumeName;
    }


    public V1beta2SparkApplicationSpecStorageos volumeNamespace(String volumeNamespace) {

        this.volumeNamespace = volumeNamespace;
        return this;
    }

    /**
     * Get volumeNamespace
     *
     * @return volumeNamespace
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getVolumeNamespace() {
        return volumeNamespace;
    }


    public void setVolumeNamespace(String volumeNamespace) {
        this.volumeNamespace = volumeNamespace;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V1beta2SparkApplicationSpecStorageos v1beta2SparkApplicationSpecStorageos =
                (V1beta2SparkApplicationSpecStorageos) o;
        return Objects.equals(this.fsType, v1beta2SparkApplicationSpecStorageos.fsType) &&
                Objects.equals(this.readOnly, v1beta2SparkApplicationSpecStorageos.readOnly) &&
                Objects.equals(this.secretRef, v1beta2SparkApplicationSpecStorageos.secretRef) &&
                Objects.equals(this.volumeName, v1beta2SparkApplicationSpecStorageos.volumeName) &&
                Objects.equals(this.volumeNamespace, v1beta2SparkApplicationSpecStorageos.volumeNamespace);
    }

    @Override
    public int hashCode() {
        return Objects.hash(fsType, readOnly, secretRef, volumeName, volumeNamespace);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class V1beta2SparkApplicationSpecStorageos {\n");
        sb.append("    fsType: ").append(toIndentedString(fsType)).append("\n");
        sb.append("    readOnly: ").append(toIndentedString(readOnly)).append("\n");
        sb.append("    secretRef: ").append(toIndentedString(secretRef)).append("\n");
        sb.append("    volumeName: ").append(toIndentedString(volumeName)).append("\n");
        sb.append("    volumeNamespace: ").append(toIndentedString(volumeNamespace)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

