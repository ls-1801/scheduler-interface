package k8s.sparkoperator;/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * V1beta2SparkApplicationSpecDriverValueFrom
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-30T13:32" +
        ":37.998Z[Etc/UTC]")
public class V1beta2SparkApplicationSpecDriverValueFrom {

    private V1beta2SparkApplicationSpecDriverValueFromConfigMapKeyRef configMapKeyRef;


    private V1beta2SparkApplicationSpecDriverValueFromFieldRef fieldRef;


    private V1beta2SparkApplicationSpecDriverValueFromResourceFieldRef resourceFieldRef;


    private V1beta2SparkApplicationSpecDriverValueFromConfigMapKeyRef secretKeyRef;


    public V1beta2SparkApplicationSpecDriverValueFrom configMapKeyRef(V1beta2SparkApplicationSpecDriverValueFromConfigMapKeyRef configMapKeyRef) {

        this.configMapKeyRef = configMapKeyRef;
        return this;
    }

    /**
     * Get configMapKeyRef
     *
     * @return configMapKeyRef
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public V1beta2SparkApplicationSpecDriverValueFromConfigMapKeyRef getConfigMapKeyRef() {
        return configMapKeyRef;
    }


    public void setConfigMapKeyRef(V1beta2SparkApplicationSpecDriverValueFromConfigMapKeyRef configMapKeyRef) {
        this.configMapKeyRef = configMapKeyRef;
    }


    public V1beta2SparkApplicationSpecDriverValueFrom fieldRef(V1beta2SparkApplicationSpecDriverValueFromFieldRef fieldRef) {

        this.fieldRef = fieldRef;
        return this;
    }

    /**
     * Get fieldRef
     *
     * @return fieldRef
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public V1beta2SparkApplicationSpecDriverValueFromFieldRef getFieldRef() {
        return fieldRef;
    }


    public void setFieldRef(V1beta2SparkApplicationSpecDriverValueFromFieldRef fieldRef) {
        this.fieldRef = fieldRef;
    }


    public V1beta2SparkApplicationSpecDriverValueFrom resourceFieldRef(V1beta2SparkApplicationSpecDriverValueFromResourceFieldRef resourceFieldRef) {

        this.resourceFieldRef = resourceFieldRef;
        return this;
    }

    /**
     * Get resourceFieldRef
     *
     * @return resourceFieldRef
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public V1beta2SparkApplicationSpecDriverValueFromResourceFieldRef getResourceFieldRef() {
        return resourceFieldRef;
    }


    public void setResourceFieldRef(V1beta2SparkApplicationSpecDriverValueFromResourceFieldRef resourceFieldRef) {
        this.resourceFieldRef = resourceFieldRef;
    }


    public V1beta2SparkApplicationSpecDriverValueFrom secretKeyRef(V1beta2SparkApplicationSpecDriverValueFromConfigMapKeyRef secretKeyRef) {

        this.secretKeyRef = secretKeyRef;
        return this;
    }

    /**
     * Get secretKeyRef
     *
     * @return secretKeyRef
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public V1beta2SparkApplicationSpecDriverValueFromConfigMapKeyRef getSecretKeyRef() {
        return secretKeyRef;
    }


    public void setSecretKeyRef(V1beta2SparkApplicationSpecDriverValueFromConfigMapKeyRef secretKeyRef) {
        this.secretKeyRef = secretKeyRef;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V1beta2SparkApplicationSpecDriverValueFrom v1beta2SparkApplicationSpecDriverValueFrom =
                (V1beta2SparkApplicationSpecDriverValueFrom) o;
        return Objects.equals(this.configMapKeyRef, v1beta2SparkApplicationSpecDriverValueFrom.configMapKeyRef) &&
                Objects.equals(this.fieldRef, v1beta2SparkApplicationSpecDriverValueFrom.fieldRef) &&
                Objects.equals(this.resourceFieldRef, v1beta2SparkApplicationSpecDriverValueFrom.resourceFieldRef) &&
                Objects.equals(this.secretKeyRef, v1beta2SparkApplicationSpecDriverValueFrom.secretKeyRef);
    }

    @Override
    public int hashCode() {
        return Objects.hash(configMapKeyRef, fieldRef, resourceFieldRef, secretKeyRef);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class V1beta2SparkApplicationSpecDriverValueFrom {\n");
        sb.append("    configMapKeyRef: ").append(toIndentedString(configMapKeyRef)).append("\n");
        sb.append("    fieldRef: ").append(toIndentedString(fieldRef)).append("\n");
        sb.append("    resourceFieldRef: ").append(toIndentedString(resourceFieldRef)).append("\n");
        sb.append("    secretKeyRef: ").append(toIndentedString(secretKeyRef)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

