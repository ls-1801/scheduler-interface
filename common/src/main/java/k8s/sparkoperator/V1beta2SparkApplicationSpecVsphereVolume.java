package k8s.sparkoperator;/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * V1beta2SparkApplicationSpecVsphereVolume
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-30T13:32" +
        ":37.998Z[Etc/UTC]")
public class V1beta2SparkApplicationSpecVsphereVolume {
    private String fsType;
    private String storagePolicyID;
    private String storagePolicyName;
    private String volumePath;


    public V1beta2SparkApplicationSpecVsphereVolume fsType(String fsType) {

        this.fsType = fsType;
        return this;
    }

    /**
     * Get fsType
     *
     * @return fsType
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getFsType() {
        return fsType;
    }


    public void setFsType(String fsType) {
        this.fsType = fsType;
    }


    public V1beta2SparkApplicationSpecVsphereVolume storagePolicyID(String storagePolicyID) {

        this.storagePolicyID = storagePolicyID;
        return this;
    }

    /**
     * Get storagePolicyID
     *
     * @return storagePolicyID
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getStoragePolicyID() {
        return storagePolicyID;
    }


    public void setStoragePolicyID(String storagePolicyID) {
        this.storagePolicyID = storagePolicyID;
    }


    public V1beta2SparkApplicationSpecVsphereVolume storagePolicyName(String storagePolicyName) {

        this.storagePolicyName = storagePolicyName;
        return this;
    }

    /**
     * Get storagePolicyName
     *
     * @return storagePolicyName
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getStoragePolicyName() {
        return storagePolicyName;
    }


    public void setStoragePolicyName(String storagePolicyName) {
        this.storagePolicyName = storagePolicyName;
    }


    public V1beta2SparkApplicationSpecVsphereVolume volumePath(String volumePath) {

        this.volumePath = volumePath;
        return this;
    }

    /**
     * Get volumePath
     *
     * @return volumePath
     **/
    @ApiModelProperty(required = true, value = "")

    public String getVolumePath() {
        return volumePath;
    }


    public void setVolumePath(String volumePath) {
        this.volumePath = volumePath;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V1beta2SparkApplicationSpecVsphereVolume v1beta2SparkApplicationSpecVsphereVolume =
                (V1beta2SparkApplicationSpecVsphereVolume) o;
        return Objects.equals(this.fsType, v1beta2SparkApplicationSpecVsphereVolume.fsType) &&
                Objects.equals(this.storagePolicyID, v1beta2SparkApplicationSpecVsphereVolume.storagePolicyID) &&
                Objects.equals(this.storagePolicyName, v1beta2SparkApplicationSpecVsphereVolume.storagePolicyName) &&
                Objects.equals(this.volumePath, v1beta2SparkApplicationSpecVsphereVolume.volumePath);
    }

    @Override
    public int hashCode() {
        return Objects.hash(fsType, storagePolicyID, storagePolicyName, volumePath);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class V1beta2SparkApplicationSpecVsphereVolume {\n");
        sb.append("    fsType: ").append(toIndentedString(fsType)).append("\n");
        sb.append("    storagePolicyID: ").append(toIndentedString(storagePolicyID)).append("\n");
        sb.append("    storagePolicyName: ").append(toIndentedString(storagePolicyName)).append("\n");
        sb.append("    volumePath: ").append(toIndentedString(volumePath)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

