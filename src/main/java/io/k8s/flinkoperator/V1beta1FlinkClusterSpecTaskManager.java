/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.k8s.flinkoperator;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.fabric8.kubernetes.api.model.Affinity;
import io.fabric8.kubernetes.api.model.Container;
import io.fabric8.kubernetes.api.model.PersistentVolumeClaim;
import io.fabric8.kubernetes.api.model.PodSecurityContext;
import io.fabric8.kubernetes.api.model.Probe;
import io.fabric8.kubernetes.api.model.ResourceRequirements;
import io.fabric8.kubernetes.api.model.Toleration;
import io.fabric8.kubernetes.api.model.Volume;
import io.fabric8.kubernetes.api.model.VolumeMount;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;

/**
 * V1beta1FlinkClusterSpecTaskManager
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-02-19T16:59" +
        ":54.980Z[Etc/UTC]")
public class V1beta1FlinkClusterSpecTaskManager {
    @JsonProperty("extraPorts")
    private List<V1beta1FlinkClusterExtraPorts> extraPorts = null;

    @JsonProperty("initContainers")
    private List<Container> initContainers = null;

    @JsonProperty("livenessProbe")
    private Probe livenessProbe;

    @JsonProperty("memoryOffHeapMin")
    private Object memoryOffHeapMin;

    @JsonProperty("memoryOffHeapRatio")
    private Integer memoryOffHeapRatio;

    @JsonProperty("memoryProcessRatio")
    private Integer memoryProcessRatio;

    @JsonProperty("nodeSelector")
    private Map<String, String> nodeSelector = null;

    @JsonProperty("affinity")
    private Affinity affinity = null;

    @JsonProperty("podAnnotations")
    private Map<String, String> podAnnotations = null;

    @JsonProperty("podLabels")
    private Map<String, String> podLabels = null;

    @JsonProperty("ports")
    private V1beta1FlinkClusterSpecTaskManagerPorts ports;

    @JsonProperty("readinessProbe")
    private Probe readinessProbe;

    @JsonProperty("replicas")
    private Integer replicas;

    @JsonProperty("resources")
    private ResourceRequirements resources;

    @JsonProperty("securityContext")
    private PodSecurityContext securityContext;

    @JsonProperty("sidecars")
    private List<Container> sidecars = null;

    @JsonProperty("tolerations")
    private List<Toleration> tolerations = null;

    @JsonProperty("volumeClaimTemplates")
    private List<PersistentVolumeClaim> volumeClaimTemplates = null;

    @JsonProperty("volumeMounts")
    private List<VolumeMount> volumeMounts = null;

    @JsonProperty("volumes")
    private List<Volume> volumes = null;


    public V1beta1FlinkClusterSpecTaskManager extraPorts(List<V1beta1FlinkClusterExtraPorts> extraPorts) {

        this.extraPorts = extraPorts;
        return this;
    }

    public V1beta1FlinkClusterSpecTaskManager addExtraPortsItem(V1beta1FlinkClusterExtraPorts extraPortsItem) {
        if (this.extraPorts == null) {
            this.extraPorts = new ArrayList<>();
        }
        this.extraPorts.add(extraPortsItem);
        return this;
    }

    /**
     * Get extraPorts
     *
     * @return extraPorts
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<V1beta1FlinkClusterExtraPorts> getExtraPorts() {
        return extraPorts;
    }


    public void setExtraPorts(List<V1beta1FlinkClusterExtraPorts> extraPorts) {
        this.extraPorts = extraPorts;
    }


    public V1beta1FlinkClusterSpecTaskManager initContainers(List<Container> initContainers) {

        this.initContainers = initContainers;
        return this;
    }

    public V1beta1FlinkClusterSpecTaskManager addInitContainersItem(Container initContainersItem) {
        if (this.initContainers == null) {
            this.initContainers = new ArrayList<Container>();
        }
        this.initContainers.add(initContainersItem);
        return this;
    }

    /**
     * Get initContainers
     *
     * @return initContainers
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<Container> getInitContainers() {
        return initContainers;
    }


    public void setInitContainers(List<Container> initContainers) {
        this.initContainers = initContainers;
    }


    public V1beta1FlinkClusterSpecTaskManager livenessProbe(Probe livenessProbe) {

        this.livenessProbe = livenessProbe;
        return this;
    }

    /**
     * Get livenessProbe
     *
     * @return livenessProbe
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Probe getLivenessProbe() {
        return livenessProbe;
    }


    public void setLivenessProbe(Probe livenessProbe) {
        this.livenessProbe = livenessProbe;
    }


    public V1beta1FlinkClusterSpecTaskManager memoryOffHeapMin(Object memoryOffHeapMin) {

        this.memoryOffHeapMin = memoryOffHeapMin;
        return this;
    }

    /**
     * Get memoryOffHeapMin
     *
     * @return memoryOffHeapMin
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Object getMemoryOffHeapMin() {
        return memoryOffHeapMin;
    }


    public void setMemoryOffHeapMin(Object memoryOffHeapMin) {
        this.memoryOffHeapMin = memoryOffHeapMin;
    }


    public V1beta1FlinkClusterSpecTaskManager memoryOffHeapRatio(Integer memoryOffHeapRatio) {

        this.memoryOffHeapRatio = memoryOffHeapRatio;
        return this;
    }

    /**
     * Get memoryOffHeapRatio
     *
     * @return memoryOffHeapRatio
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Integer getMemoryOffHeapRatio() {
        return memoryOffHeapRatio;
    }


    public void setMemoryOffHeapRatio(Integer memoryOffHeapRatio) {
        this.memoryOffHeapRatio = memoryOffHeapRatio;
    }


    public V1beta1FlinkClusterSpecTaskManager memoryProcessRatio(Integer memoryProcessRatio) {

        this.memoryProcessRatio = memoryProcessRatio;
        return this;
    }

    /**
     * Get memoryProcessRatio
     *
     * @return memoryProcessRatio
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Integer getMemoryProcessRatio() {
        return memoryProcessRatio;
    }


    public void setMemoryProcessRatio(Integer memoryProcessRatio) {
        this.memoryProcessRatio = memoryProcessRatio;
    }

    public V1beta1FlinkClusterSpecTaskManager affinity(Affinity affinity) {
        this.affinity = affinity;
        return this;
    }

    /**
     * Get affinity
     *
     * @return affinity
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Affinity getAffinity() {
        return affinity;
    }


    public void setAffinity(Affinity affinity) {
        this.affinity = affinity;
    }


    public V1beta1FlinkClusterSpecTaskManager nodeSelector(Map<String, String> nodeSelector) {

        this.nodeSelector = nodeSelector;
        return this;
    }

    public V1beta1FlinkClusterSpecTaskManager putNodeSelectorItem(String key, String nodeSelectorItem) {
        if (this.nodeSelector == null) {
            this.nodeSelector = new HashMap<>();
        }
        this.nodeSelector.put(key, nodeSelectorItem);
        return this;
    }

    /**
     * Get nodeSelector
     *
     * @return nodeSelector
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Map<String, String> getNodeSelector() {
        return nodeSelector;
    }


    public void setNodeSelector(Map<String, String> nodeSelector) {
        this.nodeSelector = nodeSelector;
    }


    public V1beta1FlinkClusterSpecTaskManager podAnnotations(Map<String, String> podAnnotations) {

        this.podAnnotations = podAnnotations;
        return this;
    }

    public V1beta1FlinkClusterSpecTaskManager putPodAnnotationsItem(String key, String podAnnotationsItem) {
        if (this.podAnnotations == null) {
            this.podAnnotations = new HashMap<>();
        }
        this.podAnnotations.put(key, podAnnotationsItem);
        return this;
    }

    /**
     * Get podAnnotations
     *
     * @return podAnnotations
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Map<String, String> getPodAnnotations() {
        return podAnnotations;
    }


    public void setPodAnnotations(Map<String, String> podAnnotations) {
        this.podAnnotations = podAnnotations;
    }


    public V1beta1FlinkClusterSpecTaskManager podLabels(Map<String, String> podLabels) {

        this.podLabels = podLabels;
        return this;
    }

    public V1beta1FlinkClusterSpecTaskManager putPodLabelsItem(String key, String podLabelsItem) {
        if (this.podLabels == null) {
            this.podLabels = new HashMap<>();
        }
        this.podLabels.put(key, podLabelsItem);
        return this;
    }

    /**
     * Get podLabels
     *
     * @return podLabels
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Map<String, String> getPodLabels() {
        return podLabels;
    }


    public void setPodLabels(Map<String, String> podLabels) {
        this.podLabels = podLabels;
    }


    public V1beta1FlinkClusterSpecTaskManager ports(V1beta1FlinkClusterSpecTaskManagerPorts ports) {

        this.ports = ports;
        return this;
    }

    /**
     * Get ports
     *
     * @return ports
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public V1beta1FlinkClusterSpecTaskManagerPorts getPorts() {
        return ports;
    }


    public void setPorts(V1beta1FlinkClusterSpecTaskManagerPorts ports) {
        this.ports = ports;
    }


    public V1beta1FlinkClusterSpecTaskManager readinessProbe(Probe readinessProbe) {

        this.readinessProbe = readinessProbe;
        return this;
    }

    /**
     * Get readinessProbe
     *
     * @return readinessProbe
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Probe getReadinessProbe() {
        return readinessProbe;
    }


    public void setReadinessProbe(Probe readinessProbe) {
        this.readinessProbe = readinessProbe;
    }


    public V1beta1FlinkClusterSpecTaskManager replicas(Integer replicas) {

        this.replicas = replicas;
        return this;
    }

    /**
     * Get replicas
     *
     * @return replicas
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Integer getReplicas() {
        return replicas;
    }


    public void setReplicas(Integer replicas) {
        this.replicas = replicas;
    }


    public V1beta1FlinkClusterSpecTaskManager resources(ResourceRequirements resources) {

        this.resources = resources;
        return this;
    }

    /**
     * Get resources
     *
     * @return resources
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public ResourceRequirements getResources() {
        return resources;
    }


    public void setResources(ResourceRequirements resources) {
        this.resources = resources;
    }


    public V1beta1FlinkClusterSpecTaskManager securityContext(PodSecurityContext securityContext) {

        this.securityContext = securityContext;
        return this;
    }

    /**
     * Get securityContext
     *
     * @return securityContext
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public PodSecurityContext getSecurityContext() {
        return securityContext;
    }


    public void setSecurityContext(PodSecurityContext securityContext) {
        this.securityContext = securityContext;
    }


    public V1beta1FlinkClusterSpecTaskManager sidecars(List<Container> sidecars) {

        this.sidecars = sidecars;
        return this;
    }

    public V1beta1FlinkClusterSpecTaskManager addSidecarsItem(Container sidecarsItem) {
        if (this.sidecars == null) {
            this.sidecars = new ArrayList<Container>();
        }
        this.sidecars.add(sidecarsItem);
        return this;
    }

    /**
     * Get sidecars
     *
     * @return sidecars
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<Container> getSidecars() {
        return sidecars;
    }


    public void setSidecars(List<Container> sidecars) {
        this.sidecars = sidecars;
    }


    public V1beta1FlinkClusterSpecTaskManager tolerations(List<Toleration> tolerations) {

        this.tolerations = tolerations;
        return this;
    }

    public V1beta1FlinkClusterSpecTaskManager addTolerationsItem(Toleration tolerationsItem) {
        if (this.tolerations == null) {
            this.tolerations = new ArrayList<Toleration>();
        }
        this.tolerations.add(tolerationsItem);
        return this;
    }

    /**
     * Get tolerations
     *
     * @return tolerations
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<Toleration> getTolerations() {
        return tolerations;
    }


    public void setTolerations(List<Toleration> tolerations) {
        this.tolerations = tolerations;
    }


    public V1beta1FlinkClusterSpecTaskManager volumeClaimTemplates(List<PersistentVolumeClaim> volumeClaimTemplates) {

        this.volumeClaimTemplates = volumeClaimTemplates;
        return this;
    }

    public V1beta1FlinkClusterSpecTaskManager addVolumeClaimTemplatesItem(PersistentVolumeClaim volumeClaimTemplatesItem) {
        if (this.volumeClaimTemplates == null) {
            this.volumeClaimTemplates = new ArrayList<>();
        }
        this.volumeClaimTemplates.add(volumeClaimTemplatesItem);
        return this;
    }

    /**
     * Get volumeClaimTemplates
     *
     * @return volumeClaimTemplates
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<PersistentVolumeClaim> getVolumeClaimTemplates() {
        return volumeClaimTemplates;
    }


    public void setVolumeClaimTemplates(List<PersistentVolumeClaim> volumeClaimTemplates) {
        this.volumeClaimTemplates = volumeClaimTemplates;
    }


    public V1beta1FlinkClusterSpecTaskManager volumeMounts(List<VolumeMount> volumeMounts) {

        this.volumeMounts = volumeMounts;
        return this;
    }

    public V1beta1FlinkClusterSpecTaskManager addVolumeMountsItem(VolumeMount volumeMountsItem) {
        if (this.volumeMounts == null) {
            this.volumeMounts = new ArrayList<>();
        }
        this.volumeMounts.add(volumeMountsItem);
        return this;
    }

    /**
     * Get volumeMounts
     *
     * @return volumeMounts
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<VolumeMount> getVolumeMounts() {
        return volumeMounts;
    }


    public void setVolumeMounts(List<VolumeMount> volumeMounts) {
        this.volumeMounts = volumeMounts;
    }


    public V1beta1FlinkClusterSpecTaskManager volumes(List<Volume> volumes) {

        this.volumes = volumes;
        return this;
    }

    public V1beta1FlinkClusterSpecTaskManager addVolumesItem(Volume volumesItem) {
        if (this.volumes == null) {
            this.volumes = new ArrayList<>();
        }
        this.volumes.add(volumesItem);
        return this;
    }

    /**
     * Get volumes
     *
     * @return volumes
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<Volume> getVolumes() {
        return volumes;
    }


    public void setVolumes(List<Volume> volumes) {
        this.volumes = volumes;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V1beta1FlinkClusterSpecTaskManager v1beta1FlinkClusterSpecTaskManager = (V1beta1FlinkClusterSpecTaskManager) o;
        return Objects.equals(this.extraPorts, v1beta1FlinkClusterSpecTaskManager.extraPorts) &&
                Objects.equals(this.initContainers, v1beta1FlinkClusterSpecTaskManager.initContainers) &&
                Objects.equals(this.livenessProbe, v1beta1FlinkClusterSpecTaskManager.livenessProbe) &&
                Objects.equals(this.memoryOffHeapMin, v1beta1FlinkClusterSpecTaskManager.memoryOffHeapMin) &&
                Objects.equals(this.memoryOffHeapRatio, v1beta1FlinkClusterSpecTaskManager.memoryOffHeapRatio) &&
                Objects.equals(this.memoryProcessRatio, v1beta1FlinkClusterSpecTaskManager.memoryProcessRatio) &&
                Objects.equals(this.nodeSelector, v1beta1FlinkClusterSpecTaskManager.nodeSelector) &&
                Objects.equals(this.podAnnotations, v1beta1FlinkClusterSpecTaskManager.podAnnotations) &&
                Objects.equals(this.podLabels, v1beta1FlinkClusterSpecTaskManager.podLabels) &&
                Objects.equals(this.ports, v1beta1FlinkClusterSpecTaskManager.ports) &&
                Objects.equals(this.readinessProbe, v1beta1FlinkClusterSpecTaskManager.readinessProbe) &&
                Objects.equals(this.replicas, v1beta1FlinkClusterSpecTaskManager.replicas) &&
                Objects.equals(this.resources, v1beta1FlinkClusterSpecTaskManager.resources) &&
                Objects.equals(this.securityContext, v1beta1FlinkClusterSpecTaskManager.securityContext) &&
                Objects.equals(this.sidecars, v1beta1FlinkClusterSpecTaskManager.sidecars) &&
                Objects.equals(this.tolerations, v1beta1FlinkClusterSpecTaskManager.tolerations) &&
                Objects.equals(this.volumeClaimTemplates, v1beta1FlinkClusterSpecTaskManager.volumeClaimTemplates) &&
                Objects.equals(this.volumeMounts, v1beta1FlinkClusterSpecTaskManager.volumeMounts) &&
                Objects.equals(this.volumes, v1beta1FlinkClusterSpecTaskManager.volumes);
    }

    @Override
    public int hashCode() {
        return Objects.hash(extraPorts, initContainers, livenessProbe, memoryOffHeapMin, memoryOffHeapRatio,
                memoryProcessRatio, nodeSelector, podAnnotations, podLabels, ports, readinessProbe, replicas,
                resources, securityContext, sidecars, tolerations, volumeClaimTemplates, volumeMounts, volumes);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class V1beta1FlinkClusterSpecTaskManager {\n");
        sb.append("    extraPorts: ").append(toIndentedString(extraPorts)).append("\n");
        sb.append("    initContainers: ").append(toIndentedString(initContainers)).append("\n");
        sb.append("    livenessProbe: ").append(toIndentedString(livenessProbe)).append("\n");
        sb.append("    memoryOffHeapMin: ").append(toIndentedString(memoryOffHeapMin)).append("\n");
        sb.append("    memoryOffHeapRatio: ").append(toIndentedString(memoryOffHeapRatio)).append("\n");
        sb.append("    memoryProcessRatio: ").append(toIndentedString(memoryProcessRatio)).append("\n");
        sb.append("    nodeSelector: ").append(toIndentedString(nodeSelector)).append("\n");
        sb.append("    podAnnotations: ").append(toIndentedString(podAnnotations)).append("\n");
        sb.append("    podLabels: ").append(toIndentedString(podLabels)).append("\n");
        sb.append("    ports: ").append(toIndentedString(ports)).append("\n");
        sb.append("    readinessProbe: ").append(toIndentedString(readinessProbe)).append("\n");
        sb.append("    replicas: ").append(toIndentedString(replicas)).append("\n");
        sb.append("    resources: ").append(toIndentedString(resources)).append("\n");
        sb.append("    securityContext: ").append(toIndentedString(securityContext)).append("\n");
        sb.append("    sidecars: ").append(toIndentedString(sidecars)).append("\n");
        sb.append("    tolerations: ").append(toIndentedString(tolerations)).append("\n");
        sb.append("    volumeClaimTemplates: ").append(toIndentedString(volumeClaimTemplates)).append("\n");
        sb.append("    volumeMounts: ").append(toIndentedString(volumeMounts)).append("\n");
        sb.append("    volumes: ").append(toIndentedString(volumes)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

