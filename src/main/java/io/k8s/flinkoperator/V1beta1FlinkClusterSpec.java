/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.k8s.flinkoperator;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.fabric8.kubernetes.api.model.EnvFromSource;
import io.fabric8.kubernetes.api.model.EnvVar;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;

/**
 * V1beta1FlinkClusterSpec
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-02-19T16:59" +
        ":54.980Z[Etc/UTC]")
public class V1beta1FlinkClusterSpec {
    @JsonProperty("batchScheduler")
    private V1beta1FlinkClusterSpecBatchScheduler batchScheduler;

    @JsonProperty("batchSchedulerName")
    private String batchSchedulerName;

    @JsonProperty("envFrom")
    private List<EnvFromSource> envFrom = null;

    @JsonProperty("envVars")
    private List<EnvVar> envVars = null;

    @JsonProperty("flinkProperties")
    private Map<String, String> flinkProperties = null;

    @JsonProperty("flinkVersion")
    private String flinkVersion;

    @JsonProperty("gcpConfig")
    private V1beta1FlinkClusterSpecGcpConfig gcpConfig;

    @JsonProperty("hadoopConfig")
    private V1beta1FlinkClusterSpecHadoopConfig hadoopConfig;

    @JsonProperty("image")
    private V1beta1FlinkClusterImageSpec image;

    @JsonProperty("job")
    private V1beta1FlinkClusterSpecJob job;

    @JsonProperty("jobManager")
    private V1beta1FlinkClusterSpecJobManager jobManager;

    @JsonProperty("logConfig")
    private Map<String, String> logConfig = null;

    @JsonProperty("recreateOnUpdate")
    private Boolean recreateOnUpdate;

    @JsonProperty("revisionHistoryLimit")
    private Integer revisionHistoryLimit;

    @JsonProperty("serviceAccountName")
    private String serviceAccountName;

    @JsonProperty("taskManager")
    private V1beta1FlinkClusterSpecTaskManager taskManager;


    public V1beta1FlinkClusterSpec batchScheduler(V1beta1FlinkClusterSpecBatchScheduler batchScheduler) {

        this.batchScheduler = batchScheduler;
        return this;
    }

    /**
     * Get batchScheduler
     *
     * @return batchScheduler
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public V1beta1FlinkClusterSpecBatchScheduler getBatchScheduler() {
        return batchScheduler;
    }


    public void setBatchScheduler(V1beta1FlinkClusterSpecBatchScheduler batchScheduler) {
        this.batchScheduler = batchScheduler;
    }


    public V1beta1FlinkClusterSpec batchSchedulerName(String batchSchedulerName) {

        this.batchSchedulerName = batchSchedulerName;
        return this;
    }

    /**
     * Get batchSchedulerName
     *
     * @return batchSchedulerName
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getBatchSchedulerName() {
        return batchSchedulerName;
    }


    public void setBatchSchedulerName(String batchSchedulerName) {
        this.batchSchedulerName = batchSchedulerName;
    }


    public V1beta1FlinkClusterSpec envFrom(List<EnvFromSource> envFrom) {

        this.envFrom = envFrom;
        return this;
    }

    public V1beta1FlinkClusterSpec addEnvFromItem(EnvFromSource envFromItem) {
        if (this.envFrom == null) {
            this.envFrom = new ArrayList<>();
        }
        this.envFrom.add(envFromItem);
        return this;
    }

    /**
     * Get envFrom
     *
     * @return envFrom
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<EnvFromSource> getEnvFrom() {
        return envFrom;
    }


    public void setEnvFrom(List<EnvFromSource> envFrom) {
        this.envFrom = envFrom;
    }


    public V1beta1FlinkClusterSpec envVars(List<EnvVar> envVars) {

        this.envVars = envVars;
        return this;
    }

    public V1beta1FlinkClusterSpec addEnvVarsItem(EnvVar envVarsItem) {
        if (this.envVars == null) {
            this.envVars = new ArrayList<>();
        }
        this.envVars.add(envVarsItem);
        return this;
    }

    /**
     * Get envVars
     *
     * @return envVars
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<EnvVar> getEnvVars() {
        return envVars;
    }


    public void setEnvVars(List<EnvVar> envVars) {
        this.envVars = envVars;
    }


    public V1beta1FlinkClusterSpec flinkProperties(Map<String, String> flinkProperties) {

        this.flinkProperties = flinkProperties;
        return this;
    }

    public V1beta1FlinkClusterSpec putFlinkPropertiesItem(String key, String flinkPropertiesItem) {
        if (this.flinkProperties == null) {
            this.flinkProperties = new HashMap<>();
        }
        this.flinkProperties.put(key, flinkPropertiesItem);
        return this;
    }

    /**
     * Get flinkProperties
     *
     * @return flinkProperties
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Map<String, String> getFlinkProperties() {
        return flinkProperties;
    }


    public void setFlinkProperties(Map<String, String> flinkProperties) {
        this.flinkProperties = flinkProperties;
    }


    public V1beta1FlinkClusterSpec flinkVersion(String flinkVersion) {

        this.flinkVersion = flinkVersion;
        return this;
    }

    /**
     * Get flinkVersion
     *
     * @return flinkVersion
     **/
    @ApiModelProperty(required = true, value = "")

    public String getFlinkVersion() {
        return flinkVersion;
    }


    public void setFlinkVersion(String flinkVersion) {
        this.flinkVersion = flinkVersion;
    }


    public V1beta1FlinkClusterSpec gcpConfig(V1beta1FlinkClusterSpecGcpConfig gcpConfig) {

        this.gcpConfig = gcpConfig;
        return this;
    }

    /**
     * Get gcpConfig
     *
     * @return gcpConfig
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public V1beta1FlinkClusterSpecGcpConfig getGcpConfig() {
        return gcpConfig;
    }


    public void setGcpConfig(V1beta1FlinkClusterSpecGcpConfig gcpConfig) {
        this.gcpConfig = gcpConfig;
    }


    public V1beta1FlinkClusterSpec hadoopConfig(V1beta1FlinkClusterSpecHadoopConfig hadoopConfig) {

        this.hadoopConfig = hadoopConfig;
        return this;
    }

    /**
     * Get hadoopConfig
     *
     * @return hadoopConfig
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public V1beta1FlinkClusterSpecHadoopConfig getHadoopConfig() {
        return hadoopConfig;
    }


    public void setHadoopConfig(V1beta1FlinkClusterSpecHadoopConfig hadoopConfig) {
        this.hadoopConfig = hadoopConfig;
    }


    public V1beta1FlinkClusterSpec image(V1beta1FlinkClusterImageSpec image) {

        this.image = image;
        return this;
    }

    /**
     * Get image
     *
     * @return image
     **/
    @ApiModelProperty(required = true, value = "")

    public V1beta1FlinkClusterImageSpec getImage() {
        return image;
    }


    public void setImage(V1beta1FlinkClusterImageSpec image) {
        this.image = image;
    }


    public V1beta1FlinkClusterSpec job(V1beta1FlinkClusterSpecJob job) {

        this.job = job;
        return this;
    }

    /**
     * Get job
     *
     * @return job
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public V1beta1FlinkClusterSpecJob getJob() {
        return job;
    }


    public void setJob(V1beta1FlinkClusterSpecJob job) {
        this.job = job;
    }


    public V1beta1FlinkClusterSpec jobManager(V1beta1FlinkClusterSpecJobManager jobManager) {

        this.jobManager = jobManager;
        return this;
    }

    /**
     * Get jobManager
     *
     * @return jobManager
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public V1beta1FlinkClusterSpecJobManager getJobManager() {
        return jobManager;
    }


    public void setJobManager(V1beta1FlinkClusterSpecJobManager jobManager) {
        this.jobManager = jobManager;
    }


    public V1beta1FlinkClusterSpec logConfig(Map<String, String> logConfig) {

        this.logConfig = logConfig;
        return this;
    }

    public V1beta1FlinkClusterSpec putLogConfigItem(String key, String logConfigItem) {
        if (this.logConfig == null) {
            this.logConfig = new HashMap<>();
        }
        this.logConfig.put(key, logConfigItem);
        return this;
    }

    /**
     * Get logConfig
     *
     * @return logConfig
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Map<String, String> getLogConfig() {
        return logConfig;
    }


    public void setLogConfig(Map<String, String> logConfig) {
        this.logConfig = logConfig;
    }


    public V1beta1FlinkClusterSpec recreateOnUpdate(Boolean recreateOnUpdate) {

        this.recreateOnUpdate = recreateOnUpdate;
        return this;
    }

    /**
     * Get recreateOnUpdate
     *
     * @return recreateOnUpdate
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Boolean getRecreateOnUpdate() {
        return recreateOnUpdate;
    }


    public void setRecreateOnUpdate(Boolean recreateOnUpdate) {
        this.recreateOnUpdate = recreateOnUpdate;
    }


    public V1beta1FlinkClusterSpec revisionHistoryLimit(Integer revisionHistoryLimit) {

        this.revisionHistoryLimit = revisionHistoryLimit;
        return this;
    }

    /**
     * Get revisionHistoryLimit
     *
     * @return revisionHistoryLimit
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Integer getRevisionHistoryLimit() {
        return revisionHistoryLimit;
    }


    public void setRevisionHistoryLimit(Integer revisionHistoryLimit) {
        this.revisionHistoryLimit = revisionHistoryLimit;
    }


    public V1beta1FlinkClusterSpec serviceAccountName(String serviceAccountName) {

        this.serviceAccountName = serviceAccountName;
        return this;
    }

    /**
     * Get serviceAccountName
     *
     * @return serviceAccountName
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getServiceAccountName() {
        return serviceAccountName;
    }


    public void setServiceAccountName(String serviceAccountName) {
        this.serviceAccountName = serviceAccountName;
    }


    public V1beta1FlinkClusterSpec taskManager(V1beta1FlinkClusterSpecTaskManager taskManager) {

        this.taskManager = taskManager;
        return this;
    }

    /**
     * Get taskManager
     *
     * @return taskManager
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public V1beta1FlinkClusterSpecTaskManager getTaskManager() {
        return taskManager;
    }


    public void setTaskManager(V1beta1FlinkClusterSpecTaskManager taskManager) {
        this.taskManager = taskManager;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V1beta1FlinkClusterSpec v1beta1FlinkClusterSpec = (V1beta1FlinkClusterSpec) o;
        return Objects.equals(this.batchScheduler, v1beta1FlinkClusterSpec.batchScheduler) &&
                Objects.equals(this.batchSchedulerName, v1beta1FlinkClusterSpec.batchSchedulerName) &&
                Objects.equals(this.envFrom, v1beta1FlinkClusterSpec.envFrom) &&
                Objects.equals(this.envVars, v1beta1FlinkClusterSpec.envVars) &&
                Objects.equals(this.flinkProperties, v1beta1FlinkClusterSpec.flinkProperties) &&
                Objects.equals(this.flinkVersion, v1beta1FlinkClusterSpec.flinkVersion) &&
                Objects.equals(this.gcpConfig, v1beta1FlinkClusterSpec.gcpConfig) &&
                Objects.equals(this.hadoopConfig, v1beta1FlinkClusterSpec.hadoopConfig) &&
                Objects.equals(this.image, v1beta1FlinkClusterSpec.image) &&
                Objects.equals(this.job, v1beta1FlinkClusterSpec.job) &&
                Objects.equals(this.jobManager, v1beta1FlinkClusterSpec.jobManager) &&
                Objects.equals(this.logConfig, v1beta1FlinkClusterSpec.logConfig) &&
                Objects.equals(this.recreateOnUpdate, v1beta1FlinkClusterSpec.recreateOnUpdate) &&
                Objects.equals(this.revisionHistoryLimit, v1beta1FlinkClusterSpec.revisionHistoryLimit) &&
                Objects.equals(this.serviceAccountName, v1beta1FlinkClusterSpec.serviceAccountName) &&
                Objects.equals(this.taskManager, v1beta1FlinkClusterSpec.taskManager);
    }

    @Override
    public int hashCode() {
        return Objects.hash(batchScheduler, batchSchedulerName, envFrom, envVars, flinkProperties, flinkVersion,
                gcpConfig, hadoopConfig, image, job, jobManager, logConfig, recreateOnUpdate, revisionHistoryLimit,
                serviceAccountName, taskManager);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class V1beta1FlinkClusterSpec {\n");
        sb.append("    batchScheduler: ").append(toIndentedString(batchScheduler)).append("\n");
        sb.append("    batchSchedulerName: ").append(toIndentedString(batchSchedulerName)).append("\n");
        sb.append("    envFrom: ").append(toIndentedString(envFrom)).append("\n");
        sb.append("    envVars: ").append(toIndentedString(envVars)).append("\n");
        sb.append("    flinkProperties: ").append(toIndentedString(flinkProperties)).append("\n");
        sb.append("    flinkVersion: ").append(toIndentedString(flinkVersion)).append("\n");
        sb.append("    gcpConfig: ").append(toIndentedString(gcpConfig)).append("\n");
        sb.append("    hadoopConfig: ").append(toIndentedString(hadoopConfig)).append("\n");
        sb.append("    image: ").append(toIndentedString(image)).append("\n");
        sb.append("    job: ").append(toIndentedString(job)).append("\n");
        sb.append("    jobManager: ").append(toIndentedString(jobManager)).append("\n");
        sb.append("    logConfig: ").append(toIndentedString(logConfig)).append("\n");
        sb.append("    recreateOnUpdate: ").append(toIndentedString(recreateOnUpdate)).append("\n");
        sb.append("    revisionHistoryLimit: ").append(toIndentedString(revisionHistoryLimit)).append("\n");
        sb.append("    serviceAccountName: ").append(toIndentedString(serviceAccountName)).append("\n");
        sb.append("    taskManager: ").append(toIndentedString(taskManager)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

