package io.k8s.sparkoperator;/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * V1beta2SparkApplicationSpecDriverDnsConfig
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-30T13:32" +
        ":37.998Z[Etc/UTC]")
public class V1beta2SparkApplicationSpecDriverDnsConfig {

    private List<String> nameservers = null;


    private List<V1beta2SparkApplicationSpecDriverDnsConfigOptions> options = null;


    private List<String> searches = null;


    public V1beta2SparkApplicationSpecDriverDnsConfig nameservers(List<String> nameservers) {

        this.nameservers = nameservers;
        return this;
    }

    public V1beta2SparkApplicationSpecDriverDnsConfig addNameserversItem(String nameserversItem) {
        if (this.nameservers == null) {
            this.nameservers = new ArrayList<>();
        }
        this.nameservers.add(nameserversItem);
        return this;
    }

    /**
     * Get nameservers
     *
     * @return nameservers
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<String> getNameservers() {
        return nameservers;
    }


    public void setNameservers(List<String> nameservers) {
        this.nameservers = nameservers;
    }


    public V1beta2SparkApplicationSpecDriverDnsConfig options(List<V1beta2SparkApplicationSpecDriverDnsConfigOptions> options) {

        this.options = options;
        return this;
    }

    public V1beta2SparkApplicationSpecDriverDnsConfig addOptionsItem(V1beta2SparkApplicationSpecDriverDnsConfigOptions optionsItem) {
        if (this.options == null) {
            this.options = new ArrayList<>();
        }
        this.options.add(optionsItem);
        return this;
    }

    /**
     * Get options
     *
     * @return options
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<V1beta2SparkApplicationSpecDriverDnsConfigOptions> getOptions() {
        return options;
    }


    public void setOptions(List<V1beta2SparkApplicationSpecDriverDnsConfigOptions> options) {
        this.options = options;
    }


    public V1beta2SparkApplicationSpecDriverDnsConfig searches(List<String> searches) {

        this.searches = searches;
        return this;
    }

    public V1beta2SparkApplicationSpecDriverDnsConfig addSearchesItem(String searchesItem) {
        if (this.searches == null) {
            this.searches = new ArrayList<>();
        }
        this.searches.add(searchesItem);
        return this;
    }

    /**
     * Get searches
     *
     * @return searches
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<String> getSearches() {
        return searches;
    }


    public void setSearches(List<String> searches) {
        this.searches = searches;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V1beta2SparkApplicationSpecDriverDnsConfig v1beta2SparkApplicationSpecDriverDnsConfig =
                (V1beta2SparkApplicationSpecDriverDnsConfig) o;
        return Objects.equals(this.nameservers, v1beta2SparkApplicationSpecDriverDnsConfig.nameservers) &&
                Objects.equals(this.options, v1beta2SparkApplicationSpecDriverDnsConfig.options) &&
                Objects.equals(this.searches, v1beta2SparkApplicationSpecDriverDnsConfig.searches);
    }

    @Override
    public int hashCode() {
        return Objects.hash(nameservers, options, searches);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class V1beta2SparkApplicationSpecDriverDnsConfig {\n");
        sb.append("    nameservers: ").append(toIndentedString(nameservers)).append("\n");
        sb.append("    options: ").append(toIndentedString(options)).append("\n");
        sb.append("    searches: ").append(toIndentedString(searches)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

