package io.k8s.sparkoperator;/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * V1beta2SparkApplicationSpecNfs
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-30T13:32" +
        ":37.998Z[Etc/UTC]")
public class V1beta2SparkApplicationSpecNfs {

    private String path;


    private Boolean readOnly;


    private String server;


    public V1beta2SparkApplicationSpecNfs path(String path) {

        this.path = path;
        return this;
    }

    /**
     * Get path
     *
     * @return path
     **/
    @ApiModelProperty(required = true, value = "")

    public String getPath() {
        return path;
    }


    public void setPath(String path) {
        this.path = path;
    }


    public V1beta2SparkApplicationSpecNfs readOnly(Boolean readOnly) {

        this.readOnly = readOnly;
        return this;
    }

    /**
     * Get readOnly
     *
     * @return readOnly
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Boolean getReadOnly() {
        return readOnly;
    }


    public void setReadOnly(Boolean readOnly) {
        this.readOnly = readOnly;
    }


    public V1beta2SparkApplicationSpecNfs server(String server) {

        this.server = server;
        return this;
    }

    /**
     * Get server
     *
     * @return server
     **/
    @ApiModelProperty(required = true, value = "")

    public String getServer() {
        return server;
    }


    public void setServer(String server) {
        this.server = server;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V1beta2SparkApplicationSpecNfs v1beta2SparkApplicationSpecNfs = (V1beta2SparkApplicationSpecNfs) o;
        return Objects.equals(this.path, v1beta2SparkApplicationSpecNfs.path) &&
                Objects.equals(this.readOnly, v1beta2SparkApplicationSpecNfs.readOnly) &&
                Objects.equals(this.server, v1beta2SparkApplicationSpecNfs.server);
    }

    @Override
    public int hashCode() {
        return Objects.hash(path, readOnly, server);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class V1beta2SparkApplicationSpecNfs {\n");
        sb.append("    path: ").append(toIndentedString(path)).append("\n");
        sb.append("    readOnly: ").append(toIndentedString(readOnly)).append("\n");
        sb.append("    server: ").append(toIndentedString(server)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

