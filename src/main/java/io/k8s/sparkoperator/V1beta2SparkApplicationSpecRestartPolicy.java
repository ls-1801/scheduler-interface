package io.k8s.sparkoperator;/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * V1beta2SparkApplicationSpecRestartPolicy
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-30T13:32" +
        ":37.998Z[Etc/UTC]")
public class V1beta2SparkApplicationSpecRestartPolicy {

    private Integer onFailureRetries;


    private Long onFailureRetryInterval;


    private Integer onSubmissionFailureRetries;


    private Long onSubmissionFailureRetryInterval;
    private TypeEnum type;

    public V1beta2SparkApplicationSpecRestartPolicy onFailureRetries(Integer onFailureRetries) {

        this.onFailureRetries = onFailureRetries;
        return this;
    }

    /**
     * Get onFailureRetries
     * minimum: 0
     *
     * @return onFailureRetries
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Integer getOnFailureRetries() {
        return onFailureRetries;
    }

    public void setOnFailureRetries(Integer onFailureRetries) {
        this.onFailureRetries = onFailureRetries;
    }

    public V1beta2SparkApplicationSpecRestartPolicy onFailureRetryInterval(Long onFailureRetryInterval) {

        this.onFailureRetryInterval = onFailureRetryInterval;
        return this;
    }

    /**
     * Get onFailureRetryInterval
     * minimum: 1
     *
     * @return onFailureRetryInterval
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Long getOnFailureRetryInterval() {
        return onFailureRetryInterval;
    }

    public void setOnFailureRetryInterval(Long onFailureRetryInterval) {
        this.onFailureRetryInterval = onFailureRetryInterval;
    }

    public V1beta2SparkApplicationSpecRestartPolicy onSubmissionFailureRetries(Integer onSubmissionFailureRetries) {

        this.onSubmissionFailureRetries = onSubmissionFailureRetries;
        return this;
    }

    /**
     * Get onSubmissionFailureRetries
     * minimum: 0
     *
     * @return onSubmissionFailureRetries
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Integer getOnSubmissionFailureRetries() {
        return onSubmissionFailureRetries;
    }

    public void setOnSubmissionFailureRetries(Integer onSubmissionFailureRetries) {
        this.onSubmissionFailureRetries = onSubmissionFailureRetries;
    }

    public V1beta2SparkApplicationSpecRestartPolicy onSubmissionFailureRetryInterval(Long onSubmissionFailureRetryInterval) {

        this.onSubmissionFailureRetryInterval = onSubmissionFailureRetryInterval;
        return this;
    }

    /**
     * Get onSubmissionFailureRetryInterval
     * minimum: 1
     *
     * @return onSubmissionFailureRetryInterval
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Long getOnSubmissionFailureRetryInterval() {
        return onSubmissionFailureRetryInterval;
    }

    public void setOnSubmissionFailureRetryInterval(Long onSubmissionFailureRetryInterval) {
        this.onSubmissionFailureRetryInterval = onSubmissionFailureRetryInterval;
    }

    public V1beta2SparkApplicationSpecRestartPolicy type(TypeEnum type) {

        this.type = type;
        return this;
    }

    /**
     * Get type
     *
     * @return type
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public TypeEnum getType() {
        return type;
    }

    public void setType(TypeEnum type) {
        this.type = type;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V1beta2SparkApplicationSpecRestartPolicy v1beta2SparkApplicationSpecRestartPolicy =
                (V1beta2SparkApplicationSpecRestartPolicy) o;
        return Objects.equals(this.onFailureRetries, v1beta2SparkApplicationSpecRestartPolicy.onFailureRetries) &&
                Objects.equals(this.onFailureRetryInterval,
                        v1beta2SparkApplicationSpecRestartPolicy.onFailureRetryInterval) &&
                Objects.equals(this.onSubmissionFailureRetries,
                        v1beta2SparkApplicationSpecRestartPolicy.onSubmissionFailureRetries) &&
                Objects.equals(this.onSubmissionFailureRetryInterval,
                        v1beta2SparkApplicationSpecRestartPolicy.onSubmissionFailureRetryInterval) &&
                Objects.equals(this.type, v1beta2SparkApplicationSpecRestartPolicy.type);
    }

    @Override
    public int hashCode() {
        return Objects.hash(onFailureRetries, onFailureRetryInterval, onSubmissionFailureRetries,
                onSubmissionFailureRetryInterval, type);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class V1beta2SparkApplicationSpecRestartPolicy {\n");
        sb.append("    onFailureRetries: ").append(toIndentedString(onFailureRetries)).append("\n");
        sb.append("    onFailureRetryInterval: ").append(toIndentedString(onFailureRetryInterval)).append("\n");
        sb.append("    onSubmissionFailureRetries: ").append(toIndentedString(onSubmissionFailureRetries)).append("\n");
        sb.append("    onSubmissionFailureRetryInterval: ").append(toIndentedString(onSubmissionFailureRetryInterval))
          .append("\n");
        sb.append("    type: ").append(toIndentedString(type)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Gets or Sets type
     */
    public enum TypeEnum {
        @JsonProperty("Never")
        NEVER("Never"),

        @JsonProperty("Always")
        ALWAYS("Always"),

        @JsonProperty("OnFailure")
        ONFAILURE("OnFailure");

        @JsonIgnore
        private String value;

        TypeEnum(String value) {
            this.value = value;
        }

        public static TypeEnum fromValue(String value) {
            for (TypeEnum b : TypeEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

    }

}

