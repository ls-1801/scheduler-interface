package io.k8s.sparkoperator;/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * V1beta2SparkApplicationSpecDriverInitContainers
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-30T13:32" +
        ":37.998Z[Etc/UTC]")
public class V1beta2SparkApplicationSpecDriverInitContainers {

    private List<String> args = null;


    private List<String> command = null;


    private List<V1beta2SparkApplicationSpecDriverEnv> env = null;


    private List<V1beta2SparkApplicationSpecDriverEnvFrom> envFrom = null;


    private String image;


    private String imagePullPolicy;


    private V1beta2SparkApplicationSpecDriverLifecycle lifecycle;


    private V1beta2SparkApplicationSpecDriverLivenessProbe livenessProbe;


    private String name;


    private List<V1beta2SparkApplicationSpecDriverPorts> ports = null;


    private V1beta2SparkApplicationSpecDriverLivenessProbe readinessProbe;


    private V1beta2SparkApplicationSpecDriverResources resources;


    private V1beta2SparkApplicationSpecDriverSecurityContext securityContext;


    private V1beta2SparkApplicationSpecDriverLivenessProbe startupProbe;


    private Boolean stdin;


    private Boolean stdinOnce;


    private String terminationMessagePath;


    private String terminationMessagePolicy;


    private Boolean tty;


    private List<V1beta2SparkApplicationSpecDriverVolumeDevices> volumeDevices = null;


    private List<V1beta2SparkApplicationSpecDriverVolumeMounts> volumeMounts = null;


    private String workingDir;


    public V1beta2SparkApplicationSpecDriverInitContainers args(List<String> args) {

        this.args = args;
        return this;
    }

    public V1beta2SparkApplicationSpecDriverInitContainers addArgsItem(String argsItem) {
        if (this.args == null) {
            this.args = new ArrayList<>();
        }
        this.args.add(argsItem);
        return this;
    }

    /**
     * Get args
     *
     * @return args
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<String> getArgs() {
        return args;
    }


    public void setArgs(List<String> args) {
        this.args = args;
    }


    public V1beta2SparkApplicationSpecDriverInitContainers command(List<String> command) {

        this.command = command;
        return this;
    }

    public V1beta2SparkApplicationSpecDriverInitContainers addCommandItem(String commandItem) {
        if (this.command == null) {
            this.command = new ArrayList<>();
        }
        this.command.add(commandItem);
        return this;
    }

    /**
     * Get command
     *
     * @return command
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<String> getCommand() {
        return command;
    }


    public void setCommand(List<String> command) {
        this.command = command;
    }


    public V1beta2SparkApplicationSpecDriverInitContainers env(List<V1beta2SparkApplicationSpecDriverEnv> env) {

        this.env = env;
        return this;
    }

    public V1beta2SparkApplicationSpecDriverInitContainers addEnvItem(V1beta2SparkApplicationSpecDriverEnv envItem) {
        if (this.env == null) {
            this.env = new ArrayList<>();
        }
        this.env.add(envItem);
        return this;
    }

    /**
     * Get env
     *
     * @return env
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<V1beta2SparkApplicationSpecDriverEnv> getEnv() {
        return env;
    }


    public void setEnv(List<V1beta2SparkApplicationSpecDriverEnv> env) {
        this.env = env;
    }


    public V1beta2SparkApplicationSpecDriverInitContainers envFrom(List<V1beta2SparkApplicationSpecDriverEnvFrom> envFrom) {

        this.envFrom = envFrom;
        return this;
    }

    public V1beta2SparkApplicationSpecDriverInitContainers addEnvFromItem(V1beta2SparkApplicationSpecDriverEnvFrom envFromItem) {
        if (this.envFrom == null) {
            this.envFrom = new ArrayList<>();
        }
        this.envFrom.add(envFromItem);
        return this;
    }

    /**
     * Get envFrom
     *
     * @return envFrom
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<V1beta2SparkApplicationSpecDriverEnvFrom> getEnvFrom() {
        return envFrom;
    }


    public void setEnvFrom(List<V1beta2SparkApplicationSpecDriverEnvFrom> envFrom) {
        this.envFrom = envFrom;
    }


    public V1beta2SparkApplicationSpecDriverInitContainers image(String image) {

        this.image = image;
        return this;
    }

    /**
     * Get image
     *
     * @return image
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getImage() {
        return image;
    }


    public void setImage(String image) {
        this.image = image;
    }


    public V1beta2SparkApplicationSpecDriverInitContainers imagePullPolicy(String imagePullPolicy) {

        this.imagePullPolicy = imagePullPolicy;
        return this;
    }

    /**
     * Get imagePullPolicy
     *
     * @return imagePullPolicy
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getImagePullPolicy() {
        return imagePullPolicy;
    }


    public void setImagePullPolicy(String imagePullPolicy) {
        this.imagePullPolicy = imagePullPolicy;
    }


    public V1beta2SparkApplicationSpecDriverInitContainers lifecycle(V1beta2SparkApplicationSpecDriverLifecycle lifecycle) {

        this.lifecycle = lifecycle;
        return this;
    }

    /**
     * Get lifecycle
     *
     * @return lifecycle
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public V1beta2SparkApplicationSpecDriverLifecycle getLifecycle() {
        return lifecycle;
    }


    public void setLifecycle(V1beta2SparkApplicationSpecDriverLifecycle lifecycle) {
        this.lifecycle = lifecycle;
    }


    public V1beta2SparkApplicationSpecDriverInitContainers livenessProbe(V1beta2SparkApplicationSpecDriverLivenessProbe livenessProbe) {

        this.livenessProbe = livenessProbe;
        return this;
    }

    /**
     * Get livenessProbe
     *
     * @return livenessProbe
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public V1beta2SparkApplicationSpecDriverLivenessProbe getLivenessProbe() {
        return livenessProbe;
    }


    public void setLivenessProbe(V1beta2SparkApplicationSpecDriverLivenessProbe livenessProbe) {
        this.livenessProbe = livenessProbe;
    }


    public V1beta2SparkApplicationSpecDriverInitContainers name(String name) {

        this.name = name;
        return this;
    }

    /**
     * Get name
     *
     * @return name
     **/
    @ApiModelProperty(required = true, value = "")

    public String getName() {
        return name;
    }


    public void setName(String name) {
        this.name = name;
    }


    public V1beta2SparkApplicationSpecDriverInitContainers ports(List<V1beta2SparkApplicationSpecDriverPorts> ports) {

        this.ports = ports;
        return this;
    }

    public V1beta2SparkApplicationSpecDriverInitContainers addPortsItem(V1beta2SparkApplicationSpecDriverPorts portsItem) {
        if (this.ports == null) {
            this.ports = new ArrayList<>();
        }
        this.ports.add(portsItem);
        return this;
    }

    /**
     * Get ports
     *
     * @return ports
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<V1beta2SparkApplicationSpecDriverPorts> getPorts() {
        return ports;
    }


    public void setPorts(List<V1beta2SparkApplicationSpecDriverPorts> ports) {
        this.ports = ports;
    }


    public V1beta2SparkApplicationSpecDriverInitContainers readinessProbe(V1beta2SparkApplicationSpecDriverLivenessProbe readinessProbe) {

        this.readinessProbe = readinessProbe;
        return this;
    }

    /**
     * Get readinessProbe
     *
     * @return readinessProbe
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public V1beta2SparkApplicationSpecDriverLivenessProbe getReadinessProbe() {
        return readinessProbe;
    }


    public void setReadinessProbe(V1beta2SparkApplicationSpecDriverLivenessProbe readinessProbe) {
        this.readinessProbe = readinessProbe;
    }


    public V1beta2SparkApplicationSpecDriverInitContainers resources(V1beta2SparkApplicationSpecDriverResources resources) {

        this.resources = resources;
        return this;
    }

    /**
     * Get resources
     *
     * @return resources
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public V1beta2SparkApplicationSpecDriverResources getResources() {
        return resources;
    }


    public void setResources(V1beta2SparkApplicationSpecDriverResources resources) {
        this.resources = resources;
    }


    public V1beta2SparkApplicationSpecDriverInitContainers securityContext(V1beta2SparkApplicationSpecDriverSecurityContext securityContext) {

        this.securityContext = securityContext;
        return this;
    }

    /**
     * Get securityContext
     *
     * @return securityContext
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public V1beta2SparkApplicationSpecDriverSecurityContext getSecurityContext() {
        return securityContext;
    }


    public void setSecurityContext(V1beta2SparkApplicationSpecDriverSecurityContext securityContext) {
        this.securityContext = securityContext;
    }


    public V1beta2SparkApplicationSpecDriverInitContainers startupProbe(V1beta2SparkApplicationSpecDriverLivenessProbe startupProbe) {

        this.startupProbe = startupProbe;
        return this;
    }

    /**
     * Get startupProbe
     *
     * @return startupProbe
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public V1beta2SparkApplicationSpecDriverLivenessProbe getStartupProbe() {
        return startupProbe;
    }


    public void setStartupProbe(V1beta2SparkApplicationSpecDriverLivenessProbe startupProbe) {
        this.startupProbe = startupProbe;
    }


    public V1beta2SparkApplicationSpecDriverInitContainers stdin(Boolean stdin) {

        this.stdin = stdin;
        return this;
    }

    /**
     * Get stdin
     *
     * @return stdin
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Boolean getStdin() {
        return stdin;
    }


    public void setStdin(Boolean stdin) {
        this.stdin = stdin;
    }


    public V1beta2SparkApplicationSpecDriverInitContainers stdinOnce(Boolean stdinOnce) {

        this.stdinOnce = stdinOnce;
        return this;
    }

    /**
     * Get stdinOnce
     *
     * @return stdinOnce
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Boolean getStdinOnce() {
        return stdinOnce;
    }


    public void setStdinOnce(Boolean stdinOnce) {
        this.stdinOnce = stdinOnce;
    }


    public V1beta2SparkApplicationSpecDriverInitContainers terminationMessagePath(String terminationMessagePath) {

        this.terminationMessagePath = terminationMessagePath;
        return this;
    }

    /**
     * Get terminationMessagePath
     *
     * @return terminationMessagePath
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getTerminationMessagePath() {
        return terminationMessagePath;
    }


    public void setTerminationMessagePath(String terminationMessagePath) {
        this.terminationMessagePath = terminationMessagePath;
    }


    public V1beta2SparkApplicationSpecDriverInitContainers terminationMessagePolicy(String terminationMessagePolicy) {

        this.terminationMessagePolicy = terminationMessagePolicy;
        return this;
    }

    /**
     * Get terminationMessagePolicy
     *
     * @return terminationMessagePolicy
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getTerminationMessagePolicy() {
        return terminationMessagePolicy;
    }


    public void setTerminationMessagePolicy(String terminationMessagePolicy) {
        this.terminationMessagePolicy = terminationMessagePolicy;
    }


    public V1beta2SparkApplicationSpecDriverInitContainers tty(Boolean tty) {

        this.tty = tty;
        return this;
    }

    /**
     * Get tty
     *
     * @return tty
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Boolean getTty() {
        return tty;
    }


    public void setTty(Boolean tty) {
        this.tty = tty;
    }


    public V1beta2SparkApplicationSpecDriverInitContainers volumeDevices(List<V1beta2SparkApplicationSpecDriverVolumeDevices> volumeDevices) {

        this.volumeDevices = volumeDevices;
        return this;
    }

    public V1beta2SparkApplicationSpecDriverInitContainers addVolumeDevicesItem(V1beta2SparkApplicationSpecDriverVolumeDevices volumeDevicesItem) {
        if (this.volumeDevices == null) {
            this.volumeDevices = new ArrayList<>();
        }
        this.volumeDevices.add(volumeDevicesItem);
        return this;
    }

    /**
     * Get volumeDevices
     *
     * @return volumeDevices
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<V1beta2SparkApplicationSpecDriverVolumeDevices> getVolumeDevices() {
        return volumeDevices;
    }


    public void setVolumeDevices(List<V1beta2SparkApplicationSpecDriverVolumeDevices> volumeDevices) {
        this.volumeDevices = volumeDevices;
    }


    public V1beta2SparkApplicationSpecDriverInitContainers volumeMounts(List<V1beta2SparkApplicationSpecDriverVolumeMounts> volumeMounts) {

        this.volumeMounts = volumeMounts;
        return this;
    }

    public V1beta2SparkApplicationSpecDriverInitContainers addVolumeMountsItem(V1beta2SparkApplicationSpecDriverVolumeMounts volumeMountsItem) {
        if (this.volumeMounts == null) {
            this.volumeMounts = new ArrayList<>();
        }
        this.volumeMounts.add(volumeMountsItem);
        return this;
    }

    /**
     * Get volumeMounts
     *
     * @return volumeMounts
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<V1beta2SparkApplicationSpecDriverVolumeMounts> getVolumeMounts() {
        return volumeMounts;
    }


    public void setVolumeMounts(List<V1beta2SparkApplicationSpecDriverVolumeMounts> volumeMounts) {
        this.volumeMounts = volumeMounts;
    }


    public V1beta2SparkApplicationSpecDriverInitContainers workingDir(String workingDir) {

        this.workingDir = workingDir;
        return this;
    }

    /**
     * Get workingDir
     *
     * @return workingDir
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getWorkingDir() {
        return workingDir;
    }


    public void setWorkingDir(String workingDir) {
        this.workingDir = workingDir;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V1beta2SparkApplicationSpecDriverInitContainers v1beta2SparkApplicationSpecDriverInitContainers =
                (V1beta2SparkApplicationSpecDriverInitContainers) o;
        return Objects.equals(this.args, v1beta2SparkApplicationSpecDriverInitContainers.args) &&
                Objects.equals(this.command, v1beta2SparkApplicationSpecDriverInitContainers.command) &&
                Objects.equals(this.env, v1beta2SparkApplicationSpecDriverInitContainers.env) &&
                Objects.equals(this.envFrom, v1beta2SparkApplicationSpecDriverInitContainers.envFrom) &&
                Objects.equals(this.image, v1beta2SparkApplicationSpecDriverInitContainers.image) &&
                Objects.equals(this.imagePullPolicy, v1beta2SparkApplicationSpecDriverInitContainers.imagePullPolicy) &&
                Objects.equals(this.lifecycle, v1beta2SparkApplicationSpecDriverInitContainers.lifecycle) &&
                Objects.equals(this.livenessProbe, v1beta2SparkApplicationSpecDriverInitContainers.livenessProbe) &&
                Objects.equals(this.name, v1beta2SparkApplicationSpecDriverInitContainers.name) &&
                Objects.equals(this.ports, v1beta2SparkApplicationSpecDriverInitContainers.ports) &&
                Objects.equals(this.readinessProbe, v1beta2SparkApplicationSpecDriverInitContainers.readinessProbe) &&
                Objects.equals(this.resources, v1beta2SparkApplicationSpecDriverInitContainers.resources) &&
                Objects.equals(this.securityContext, v1beta2SparkApplicationSpecDriverInitContainers.securityContext) &&
                Objects.equals(this.startupProbe, v1beta2SparkApplicationSpecDriverInitContainers.startupProbe) &&
                Objects.equals(this.stdin, v1beta2SparkApplicationSpecDriverInitContainers.stdin) &&
                Objects.equals(this.stdinOnce, v1beta2SparkApplicationSpecDriverInitContainers.stdinOnce) &&
                Objects.equals(this.terminationMessagePath,
                        v1beta2SparkApplicationSpecDriverInitContainers.terminationMessagePath) &&
                Objects.equals(this.terminationMessagePolicy,
                        v1beta2SparkApplicationSpecDriverInitContainers.terminationMessagePolicy) &&
                Objects.equals(this.tty, v1beta2SparkApplicationSpecDriverInitContainers.tty) &&
                Objects.equals(this.volumeDevices, v1beta2SparkApplicationSpecDriverInitContainers.volumeDevices) &&
                Objects.equals(this.volumeMounts, v1beta2SparkApplicationSpecDriverInitContainers.volumeMounts) &&
                Objects.equals(this.workingDir, v1beta2SparkApplicationSpecDriverInitContainers.workingDir);
    }

    @Override
    public int hashCode() {
        return Objects.hash(args, command, env, envFrom, image, imagePullPolicy, lifecycle, livenessProbe, name,
                ports, readinessProbe, resources, securityContext, startupProbe, stdin, stdinOnce,
                terminationMessagePath, terminationMessagePolicy, tty, volumeDevices, volumeMounts, workingDir);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class V1beta2SparkApplicationSpecDriverInitContainers {\n");
        sb.append("    args: ").append(toIndentedString(args)).append("\n");
        sb.append("    command: ").append(toIndentedString(command)).append("\n");
        sb.append("    env: ").append(toIndentedString(env)).append("\n");
        sb.append("    envFrom: ").append(toIndentedString(envFrom)).append("\n");
        sb.append("    image: ").append(toIndentedString(image)).append("\n");
        sb.append("    imagePullPolicy: ").append(toIndentedString(imagePullPolicy)).append("\n");
        sb.append("    lifecycle: ").append(toIndentedString(lifecycle)).append("\n");
        sb.append("    livenessProbe: ").append(toIndentedString(livenessProbe)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    ports: ").append(toIndentedString(ports)).append("\n");
        sb.append("    readinessProbe: ").append(toIndentedString(readinessProbe)).append("\n");
        sb.append("    resources: ").append(toIndentedString(resources)).append("\n");
        sb.append("    securityContext: ").append(toIndentedString(securityContext)).append("\n");
        sb.append("    startupProbe: ").append(toIndentedString(startupProbe)).append("\n");
        sb.append("    stdin: ").append(toIndentedString(stdin)).append("\n");
        sb.append("    stdinOnce: ").append(toIndentedString(stdinOnce)).append("\n");
        sb.append("    terminationMessagePath: ").append(toIndentedString(terminationMessagePath)).append("\n");
        sb.append("    terminationMessagePolicy: ").append(toIndentedString(terminationMessagePolicy)).append("\n");
        sb.append("    tty: ").append(toIndentedString(tty)).append("\n");
        sb.append("    volumeDevices: ").append(toIndentedString(volumeDevices)).append("\n");
        sb.append("    volumeMounts: ").append(toIndentedString(volumeMounts)).append("\n");
        sb.append("    workingDir: ").append(toIndentedString(workingDir)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

