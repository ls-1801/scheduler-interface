package io.k8s.sparkoperator;/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * V1beta2SparkApplicationSpecDriverLifecyclePostStartHttpGet
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-30T13:32" +
        ":37.998Z[Etc/UTC]")
public class V1beta2SparkApplicationSpecDriverLifecyclePostStartHttpGet {

    private String host;


    private List<V1beta2SparkApplicationSpecDriverLifecyclePostStartHttpGetHttpHeaders> httpHeaders = null;


    private String path;


    private Object port;


    private String scheme;


    public V1beta2SparkApplicationSpecDriverLifecyclePostStartHttpGet host(String host) {

        this.host = host;
        return this;
    }

    /**
     * Get host
     *
     * @return host
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getHost() {
        return host;
    }


    public void setHost(String host) {
        this.host = host;
    }


    public V1beta2SparkApplicationSpecDriverLifecyclePostStartHttpGet httpHeaders(List<V1beta2SparkApplicationSpecDriverLifecyclePostStartHttpGetHttpHeaders> httpHeaders) {

        this.httpHeaders = httpHeaders;
        return this;
    }

    public V1beta2SparkApplicationSpecDriverLifecyclePostStartHttpGet addHttpHeadersItem(V1beta2SparkApplicationSpecDriverLifecyclePostStartHttpGetHttpHeaders httpHeadersItem) {
        if (this.httpHeaders == null) {
            this.httpHeaders = new ArrayList<>();
        }
        this.httpHeaders.add(httpHeadersItem);
        return this;
    }

    /**
     * Get httpHeaders
     *
     * @return httpHeaders
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<V1beta2SparkApplicationSpecDriverLifecyclePostStartHttpGetHttpHeaders> getHttpHeaders() {
        return httpHeaders;
    }


    public void setHttpHeaders(List<V1beta2SparkApplicationSpecDriverLifecyclePostStartHttpGetHttpHeaders> httpHeaders) {
        this.httpHeaders = httpHeaders;
    }


    public V1beta2SparkApplicationSpecDriverLifecyclePostStartHttpGet path(String path) {

        this.path = path;
        return this;
    }

    /**
     * Get path
     *
     * @return path
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getPath() {
        return path;
    }


    public void setPath(String path) {
        this.path = path;
    }


    public V1beta2SparkApplicationSpecDriverLifecyclePostStartHttpGet port(Object port) {

        this.port = port;
        return this;
    }

    /**
     * Get port
     *
     * @return port
     **/
    @ApiModelProperty(required = true, value = "")

    public Object getPort() {
        return port;
    }


    public void setPort(Object port) {
        this.port = port;
    }


    public V1beta2SparkApplicationSpecDriverLifecyclePostStartHttpGet scheme(String scheme) {

        this.scheme = scheme;
        return this;
    }

    /**
     * Get scheme
     *
     * @return scheme
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getScheme() {
        return scheme;
    }


    public void setScheme(String scheme) {
        this.scheme = scheme;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V1beta2SparkApplicationSpecDriverLifecyclePostStartHttpGet v1beta2SparkApplicationSpecDriverLifecyclePostStartHttpGet = (V1beta2SparkApplicationSpecDriverLifecyclePostStartHttpGet) o;
        return Objects.equals(this.host, v1beta2SparkApplicationSpecDriverLifecyclePostStartHttpGet.host) &&
                Objects.equals(this.httpHeaders,
                        v1beta2SparkApplicationSpecDriverLifecyclePostStartHttpGet.httpHeaders) &&
                Objects.equals(this.path, v1beta2SparkApplicationSpecDriverLifecyclePostStartHttpGet.path) &&
                Objects.equals(this.port, v1beta2SparkApplicationSpecDriverLifecyclePostStartHttpGet.port) &&
                Objects.equals(this.scheme, v1beta2SparkApplicationSpecDriverLifecyclePostStartHttpGet.scheme);
    }

    @Override
    public int hashCode() {
        return Objects.hash(host, httpHeaders, path, port, scheme);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class V1beta2SparkApplicationSpecDriverLifecyclePostStartHttpGet {\n");
        sb.append("    host: ").append(toIndentedString(host)).append("\n");
        sb.append("    httpHeaders: ").append(toIndentedString(httpHeaders)).append("\n");
        sb.append("    path: ").append(toIndentedString(path)).append("\n");
        sb.append("    port: ").append(toIndentedString(port)).append("\n");
        sb.append("    scheme: ").append(toIndentedString(scheme)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

