package io.k8s.sparkoperator;/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * V1beta2SparkApplicationSpecDriverSecurityContextWindowsOptions
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-30T13:32" +
        ":37.998Z[Etc/UTC]")
public class V1beta2SparkApplicationSpecDriverSecurityContextWindowsOptions {

    private String gmsaCredentialSpec;


    private String gmsaCredentialSpecName;


    private String runAsUserName;


    public V1beta2SparkApplicationSpecDriverSecurityContextWindowsOptions gmsaCredentialSpec(String gmsaCredentialSpec) {

        this.gmsaCredentialSpec = gmsaCredentialSpec;
        return this;
    }

    /**
     * Get gmsaCredentialSpec
     *
     * @return gmsaCredentialSpec
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getGmsaCredentialSpec() {
        return gmsaCredentialSpec;
    }


    public void setGmsaCredentialSpec(String gmsaCredentialSpec) {
        this.gmsaCredentialSpec = gmsaCredentialSpec;
    }


    public V1beta2SparkApplicationSpecDriverSecurityContextWindowsOptions gmsaCredentialSpecName(String gmsaCredentialSpecName) {

        this.gmsaCredentialSpecName = gmsaCredentialSpecName;
        return this;
    }

    /**
     * Get gmsaCredentialSpecName
     *
     * @return gmsaCredentialSpecName
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getGmsaCredentialSpecName() {
        return gmsaCredentialSpecName;
    }


    public void setGmsaCredentialSpecName(String gmsaCredentialSpecName) {
        this.gmsaCredentialSpecName = gmsaCredentialSpecName;
    }


    public V1beta2SparkApplicationSpecDriverSecurityContextWindowsOptions runAsUserName(String runAsUserName) {

        this.runAsUserName = runAsUserName;
        return this;
    }

    /**
     * Get runAsUserName
     *
     * @return runAsUserName
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getRunAsUserName() {
        return runAsUserName;
    }


    public void setRunAsUserName(String runAsUserName) {
        this.runAsUserName = runAsUserName;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V1beta2SparkApplicationSpecDriverSecurityContextWindowsOptions v1beta2SparkApplicationSpecDriverSecurityContextWindowsOptions = (V1beta2SparkApplicationSpecDriverSecurityContextWindowsOptions) o;
        return Objects.equals(this.gmsaCredentialSpec,
                v1beta2SparkApplicationSpecDriverSecurityContextWindowsOptions.gmsaCredentialSpec) &&
                Objects.equals(this.gmsaCredentialSpecName,
                        v1beta2SparkApplicationSpecDriverSecurityContextWindowsOptions.gmsaCredentialSpecName) &&
                Objects.equals(this.runAsUserName,
                        v1beta2SparkApplicationSpecDriverSecurityContextWindowsOptions.runAsUserName);
    }

    @Override
    public int hashCode() {
        return Objects.hash(gmsaCredentialSpec, gmsaCredentialSpecName, runAsUserName);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class V1beta2SparkApplicationSpecDriverSecurityContextWindowsOptions {\n");
        sb.append("    gmsaCredentialSpec: ").append(toIndentedString(gmsaCredentialSpec)).append("\n");
        sb.append("    gmsaCredentialSpecName: ").append(toIndentedString(gmsaCredentialSpecName)).append("\n");
        sb.append("    runAsUserName: ").append(toIndentedString(runAsUserName)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

