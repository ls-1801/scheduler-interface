package io.k8s.sparkoperator;/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * V1beta2SparkApplicationSpecQuobyte
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-30T13:32" +
        ":37.998Z[Etc/UTC]")
public class V1beta2SparkApplicationSpecQuobyte {

    private String group;


    private Boolean readOnly;


    private String registry;


    private String tenant;


    private String user;


    private String volume;


    public V1beta2SparkApplicationSpecQuobyte group(String group) {

        this.group = group;
        return this;
    }

    /**
     * Get group
     *
     * @return group
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getGroup() {
        return group;
    }


    public void setGroup(String group) {
        this.group = group;
    }


    public V1beta2SparkApplicationSpecQuobyte readOnly(Boolean readOnly) {

        this.readOnly = readOnly;
        return this;
    }

    /**
     * Get readOnly
     *
     * @return readOnly
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Boolean getReadOnly() {
        return readOnly;
    }


    public void setReadOnly(Boolean readOnly) {
        this.readOnly = readOnly;
    }


    public V1beta2SparkApplicationSpecQuobyte registry(String registry) {

        this.registry = registry;
        return this;
    }

    /**
     * Get registry
     *
     * @return registry
     **/
    @ApiModelProperty(required = true, value = "")

    public String getRegistry() {
        return registry;
    }


    public void setRegistry(String registry) {
        this.registry = registry;
    }


    public V1beta2SparkApplicationSpecQuobyte tenant(String tenant) {

        this.tenant = tenant;
        return this;
    }

    /**
     * Get tenant
     *
     * @return tenant
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getTenant() {
        return tenant;
    }


    public void setTenant(String tenant) {
        this.tenant = tenant;
    }


    public V1beta2SparkApplicationSpecQuobyte user(String user) {

        this.user = user;
        return this;
    }

    /**
     * Get user
     *
     * @return user
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getUser() {
        return user;
    }


    public void setUser(String user) {
        this.user = user;
    }


    public V1beta2SparkApplicationSpecQuobyte volume(String volume) {

        this.volume = volume;
        return this;
    }

    /**
     * Get volume
     *
     * @return volume
     **/
    @ApiModelProperty(required = true, value = "")

    public String getVolume() {
        return volume;
    }


    public void setVolume(String volume) {
        this.volume = volume;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V1beta2SparkApplicationSpecQuobyte v1beta2SparkApplicationSpecQuobyte = (V1beta2SparkApplicationSpecQuobyte) o;
        return Objects.equals(this.group, v1beta2SparkApplicationSpecQuobyte.group) &&
                Objects.equals(this.readOnly, v1beta2SparkApplicationSpecQuobyte.readOnly) &&
                Objects.equals(this.registry, v1beta2SparkApplicationSpecQuobyte.registry) &&
                Objects.equals(this.tenant, v1beta2SparkApplicationSpecQuobyte.tenant) &&
                Objects.equals(this.user, v1beta2SparkApplicationSpecQuobyte.user) &&
                Objects.equals(this.volume, v1beta2SparkApplicationSpecQuobyte.volume);
    }

    @Override
    public int hashCode() {
        return Objects.hash(group, readOnly, registry, tenant, user, volume);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class V1beta2SparkApplicationSpecQuobyte {\n");
        sb.append("    group: ").append(toIndentedString(group)).append("\n");
        sb.append("    readOnly: ").append(toIndentedString(readOnly)).append("\n");
        sb.append("    registry: ").append(toIndentedString(registry)).append("\n");
        sb.append("    tenant: ").append(toIndentedString(tenant)).append("\n");
        sb.append("    user: ").append(toIndentedString(user)).append("\n");
        sb.append("    volume: ").append(toIndentedString(volume)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

