package io.k8s.sparkoperator;/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * V1beta2SparkApplicationSpecProjected
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-30T13:32" +
        ":37.998Z[Etc/UTC]")
public class V1beta2SparkApplicationSpecProjected {

    private Integer defaultMode;


    private List<V1beta2SparkApplicationSpecProjectedSources> sources = new ArrayList<>();


    public V1beta2SparkApplicationSpecProjected defaultMode(Integer defaultMode) {

        this.defaultMode = defaultMode;
        return this;
    }

    /**
     * Get defaultMode
     *
     * @return defaultMode
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Integer getDefaultMode() {
        return defaultMode;
    }


    public void setDefaultMode(Integer defaultMode) {
        this.defaultMode = defaultMode;
    }


    public V1beta2SparkApplicationSpecProjected sources(List<V1beta2SparkApplicationSpecProjectedSources> sources) {

        this.sources = sources;
        return this;
    }

    public V1beta2SparkApplicationSpecProjected addSourcesItem(V1beta2SparkApplicationSpecProjectedSources sourcesItem) {
        this.sources.add(sourcesItem);
        return this;
    }

    /**
     * Get sources
     *
     * @return sources
     **/
    @ApiModelProperty(required = true, value = "")

    public List<V1beta2SparkApplicationSpecProjectedSources> getSources() {
        return sources;
    }


    public void setSources(List<V1beta2SparkApplicationSpecProjectedSources> sources) {
        this.sources = sources;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V1beta2SparkApplicationSpecProjected v1beta2SparkApplicationSpecProjected =
                (V1beta2SparkApplicationSpecProjected) o;
        return Objects.equals(this.defaultMode, v1beta2SparkApplicationSpecProjected.defaultMode) &&
                Objects.equals(this.sources, v1beta2SparkApplicationSpecProjected.sources);
    }

    @Override
    public int hashCode() {
        return Objects.hash(defaultMode, sources);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class V1beta2SparkApplicationSpecProjected {\n");
        sb.append("    defaultMode: ").append(toIndentedString(defaultMode)).append("\n");
        sb.append("    sources: ").append(toIndentedString(sources)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

