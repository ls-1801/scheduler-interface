package io.k8s.sparkoperator;/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * V1beta2SparkApplicationSpecDeps
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-30T13:32" +
        ":37.998Z[Etc/UTC]")
public class V1beta2SparkApplicationSpecDeps {

    private List<String> excludePackages = null;


    private List<String> files = null;


    private List<String> jars = null;


    private List<String> packages = null;


    private List<String> pyFiles = null;


    private List<String> repositories = null;


    public V1beta2SparkApplicationSpecDeps excludePackages(List<String> excludePackages) {

        this.excludePackages = excludePackages;
        return this;
    }

    public V1beta2SparkApplicationSpecDeps addExcludePackagesItem(String excludePackagesItem) {
        if (this.excludePackages == null) {
            this.excludePackages = new ArrayList<>();
        }
        this.excludePackages.add(excludePackagesItem);
        return this;
    }

    /**
     * Get excludePackages
     *
     * @return excludePackages
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<String> getExcludePackages() {
        return excludePackages;
    }


    public void setExcludePackages(List<String> excludePackages) {
        this.excludePackages = excludePackages;
    }


    public V1beta2SparkApplicationSpecDeps files(List<String> files) {

        this.files = files;
        return this;
    }

    public V1beta2SparkApplicationSpecDeps addFilesItem(String filesItem) {
        if (this.files == null) {
            this.files = new ArrayList<>();
        }
        this.files.add(filesItem);
        return this;
    }

    /**
     * Get files
     *
     * @return files
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<String> getFiles() {
        return files;
    }


    public void setFiles(List<String> files) {
        this.files = files;
    }


    public V1beta2SparkApplicationSpecDeps jars(List<String> jars) {

        this.jars = jars;
        return this;
    }

    public V1beta2SparkApplicationSpecDeps addJarsItem(String jarsItem) {
        if (this.jars == null) {
            this.jars = new ArrayList<>();
        }
        this.jars.add(jarsItem);
        return this;
    }

    /**
     * Get jars
     *
     * @return jars
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<String> getJars() {
        return jars;
    }


    public void setJars(List<String> jars) {
        this.jars = jars;
    }


    public V1beta2SparkApplicationSpecDeps packages(List<String> packages) {

        this.packages = packages;
        return this;
    }

    public V1beta2SparkApplicationSpecDeps addPackagesItem(String packagesItem) {
        if (this.packages == null) {
            this.packages = new ArrayList<>();
        }
        this.packages.add(packagesItem);
        return this;
    }

    /**
     * Get packages
     *
     * @return packages
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<String> getPackages() {
        return packages;
    }


    public void setPackages(List<String> packages) {
        this.packages = packages;
    }


    public V1beta2SparkApplicationSpecDeps pyFiles(List<String> pyFiles) {

        this.pyFiles = pyFiles;
        return this;
    }

    public V1beta2SparkApplicationSpecDeps addPyFilesItem(String pyFilesItem) {
        if (this.pyFiles == null) {
            this.pyFiles = new ArrayList<>();
        }
        this.pyFiles.add(pyFilesItem);
        return this;
    }

    /**
     * Get pyFiles
     *
     * @return pyFiles
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<String> getPyFiles() {
        return pyFiles;
    }


    public void setPyFiles(List<String> pyFiles) {
        this.pyFiles = pyFiles;
    }


    public V1beta2SparkApplicationSpecDeps repositories(List<String> repositories) {

        this.repositories = repositories;
        return this;
    }

    public V1beta2SparkApplicationSpecDeps addRepositoriesItem(String repositoriesItem) {
        if (this.repositories == null) {
            this.repositories = new ArrayList<>();
        }
        this.repositories.add(repositoriesItem);
        return this;
    }

    /**
     * Get repositories
     *
     * @return repositories
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<String> getRepositories() {
        return repositories;
    }


    public void setRepositories(List<String> repositories) {
        this.repositories = repositories;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V1beta2SparkApplicationSpecDeps v1beta2SparkApplicationSpecDeps = (V1beta2SparkApplicationSpecDeps) o;
        return Objects.equals(this.excludePackages, v1beta2SparkApplicationSpecDeps.excludePackages) &&
                Objects.equals(this.files, v1beta2SparkApplicationSpecDeps.files) &&
                Objects.equals(this.jars, v1beta2SparkApplicationSpecDeps.jars) &&
                Objects.equals(this.packages, v1beta2SparkApplicationSpecDeps.packages) &&
                Objects.equals(this.pyFiles, v1beta2SparkApplicationSpecDeps.pyFiles) &&
                Objects.equals(this.repositories, v1beta2SparkApplicationSpecDeps.repositories);
    }

    @Override
    public int hashCode() {
        return Objects.hash(excludePackages, files, jars, packages, pyFiles, repositories);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class V1beta2SparkApplicationSpecDeps {\n");
        sb.append("    excludePackages: ").append(toIndentedString(excludePackages)).append("\n");
        sb.append("    files: ").append(toIndentedString(files)).append("\n");
        sb.append("    jars: ").append(toIndentedString(jars)).append("\n");
        sb.append("    packages: ").append(toIndentedString(packages)).append("\n");
        sb.append("    pyFiles: ").append(toIndentedString(pyFiles)).append("\n");
        sb.append("    repositories: ").append(toIndentedString(repositories)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

