package io.k8s.sparkoperator;/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * V1beta2SparkApplicationSpecProjectedSources
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-30T13:32" +
        ":37.998Z[Etc/UTC]")
public class V1beta2SparkApplicationSpecProjectedSources {

    private V1beta2SparkApplicationSpecProjectedConfigMap configMap;


    private V1beta2SparkApplicationSpecProjectedDownwardAPI downwardAPI;


    private V1beta2SparkApplicationSpecProjectedConfigMap secret;


    private V1beta2SparkApplicationSpecProjectedServiceAccountToken serviceAccountToken;


    public V1beta2SparkApplicationSpecProjectedSources configMap(V1beta2SparkApplicationSpecProjectedConfigMap configMap) {

        this.configMap = configMap;
        return this;
    }

    /**
     * Get configMap
     *
     * @return configMap
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public V1beta2SparkApplicationSpecProjectedConfigMap getConfigMap() {
        return configMap;
    }


    public void setConfigMap(V1beta2SparkApplicationSpecProjectedConfigMap configMap) {
        this.configMap = configMap;
    }


    public V1beta2SparkApplicationSpecProjectedSources downwardAPI(V1beta2SparkApplicationSpecProjectedDownwardAPI downwardAPI) {

        this.downwardAPI = downwardAPI;
        return this;
    }

    /**
     * Get downwardAPI
     *
     * @return downwardAPI
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public V1beta2SparkApplicationSpecProjectedDownwardAPI getDownwardAPI() {
        return downwardAPI;
    }


    public void setDownwardAPI(V1beta2SparkApplicationSpecProjectedDownwardAPI downwardAPI) {
        this.downwardAPI = downwardAPI;
    }


    public V1beta2SparkApplicationSpecProjectedSources secret(V1beta2SparkApplicationSpecProjectedConfigMap secret) {

        this.secret = secret;
        return this;
    }

    /**
     * Get secret
     *
     * @return secret
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public V1beta2SparkApplicationSpecProjectedConfigMap getSecret() {
        return secret;
    }


    public void setSecret(V1beta2SparkApplicationSpecProjectedConfigMap secret) {
        this.secret = secret;
    }


    public V1beta2SparkApplicationSpecProjectedSources serviceAccountToken(V1beta2SparkApplicationSpecProjectedServiceAccountToken serviceAccountToken) {

        this.serviceAccountToken = serviceAccountToken;
        return this;
    }

    /**
     * Get serviceAccountToken
     *
     * @return serviceAccountToken
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public V1beta2SparkApplicationSpecProjectedServiceAccountToken getServiceAccountToken() {
        return serviceAccountToken;
    }


    public void setServiceAccountToken(V1beta2SparkApplicationSpecProjectedServiceAccountToken serviceAccountToken) {
        this.serviceAccountToken = serviceAccountToken;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V1beta2SparkApplicationSpecProjectedSources v1beta2SparkApplicationSpecProjectedSources =
                (V1beta2SparkApplicationSpecProjectedSources) o;
        return Objects.equals(this.configMap, v1beta2SparkApplicationSpecProjectedSources.configMap) &&
                Objects.equals(this.downwardAPI, v1beta2SparkApplicationSpecProjectedSources.downwardAPI) &&
                Objects.equals(this.secret, v1beta2SparkApplicationSpecProjectedSources.secret) &&
                Objects.equals(this.serviceAccountToken,
                        v1beta2SparkApplicationSpecProjectedSources.serviceAccountToken);
    }

    @Override
    public int hashCode() {
        return Objects.hash(configMap, downwardAPI, secret, serviceAccountToken);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class V1beta2SparkApplicationSpecProjectedSources {\n");
        sb.append("    configMap: ").append(toIndentedString(configMap)).append("\n");
        sb.append("    downwardAPI: ").append(toIndentedString(downwardAPI)).append("\n");
        sb.append("    secret: ").append(toIndentedString(secret)).append("\n");
        sb.append("    serviceAccountToken: ").append(toIndentedString(serviceAccountToken)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

