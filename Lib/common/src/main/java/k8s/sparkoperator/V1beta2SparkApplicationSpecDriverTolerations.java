package k8s.sparkoperator;/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * V1beta2SparkApplicationSpecDriverTolerations
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-30T13:32" +
        ":37.998Z[Etc/UTC]")
public class V1beta2SparkApplicationSpecDriverTolerations {

    private String effect;


    private String key;


    private String operator;


    private Long tolerationSeconds;


    private String value;


    public V1beta2SparkApplicationSpecDriverTolerations effect(String effect) {

        this.effect = effect;
        return this;
    }

    /**
     * Get effect
     *
     * @return effect
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getEffect() {
        return effect;
    }


    public void setEffect(String effect) {
        this.effect = effect;
    }


    public V1beta2SparkApplicationSpecDriverTolerations key(String key) {

        this.key = key;
        return this;
    }

    /**
     * Get key
     *
     * @return key
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getKey() {
        return key;
    }


    public void setKey(String key) {
        this.key = key;
    }


    public V1beta2SparkApplicationSpecDriverTolerations operator(String operator) {

        this.operator = operator;
        return this;
    }

    /**
     * Get operator
     *
     * @return operator
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getOperator() {
        return operator;
    }


    public void setOperator(String operator) {
        this.operator = operator;
    }


    public V1beta2SparkApplicationSpecDriverTolerations tolerationSeconds(Long tolerationSeconds) {

        this.tolerationSeconds = tolerationSeconds;
        return this;
    }

    /**
     * Get tolerationSeconds
     *
     * @return tolerationSeconds
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Long getTolerationSeconds() {
        return tolerationSeconds;
    }


    public void setTolerationSeconds(Long tolerationSeconds) {
        this.tolerationSeconds = tolerationSeconds;
    }


    public V1beta2SparkApplicationSpecDriverTolerations value(String value) {

        this.value = value;
        return this;
    }

    /**
     * Get value
     *
     * @return value
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getValue() {
        return value;
    }


    public void setValue(String value) {
        this.value = value;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V1beta2SparkApplicationSpecDriverTolerations v1beta2SparkApplicationSpecDriverTolerations =
                (V1beta2SparkApplicationSpecDriverTolerations) o;
        return Objects.equals(this.effect, v1beta2SparkApplicationSpecDriverTolerations.effect) &&
                Objects.equals(this.key, v1beta2SparkApplicationSpecDriverTolerations.key) &&
                Objects.equals(this.operator, v1beta2SparkApplicationSpecDriverTolerations.operator) &&
                Objects.equals(this.tolerationSeconds,
                        v1beta2SparkApplicationSpecDriverTolerations.tolerationSeconds) &&
                Objects.equals(this.value, v1beta2SparkApplicationSpecDriverTolerations.value);
    }

    @Override
    public int hashCode() {
        return Objects.hash(effect, key, operator, tolerationSeconds, value);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class V1beta2SparkApplicationSpecDriverTolerations {\n");
        sb.append("    effect: ").append(toIndentedString(effect)).append("\n");
        sb.append("    key: ").append(toIndentedString(key)).append("\n");
        sb.append("    operator: ").append(toIndentedString(operator)).append("\n");
        sb.append("    tolerationSeconds: ").append(toIndentedString(tolerationSeconds)).append("\n");
        sb.append("    value: ").append(toIndentedString(value)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

