package k8s.sparkoperator;/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * V1beta2SparkApplicationSpecPersistentVolumeClaim
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-30T13:32" +
        ":37.998Z[Etc/UTC]")
public class V1beta2SparkApplicationSpecPersistentVolumeClaim {

    private String claimName;


    private Boolean readOnly;


    public V1beta2SparkApplicationSpecPersistentVolumeClaim claimName(String claimName) {

        this.claimName = claimName;
        return this;
    }

    /**
     * Get claimName
     *
     * @return claimName
     **/
    @ApiModelProperty(required = true, value = "")

    public String getClaimName() {
        return claimName;
    }


    public void setClaimName(String claimName) {
        this.claimName = claimName;
    }


    public V1beta2SparkApplicationSpecPersistentVolumeClaim readOnly(Boolean readOnly) {

        this.readOnly = readOnly;
        return this;
    }

    /**
     * Get readOnly
     *
     * @return readOnly
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Boolean getReadOnly() {
        return readOnly;
    }


    public void setReadOnly(Boolean readOnly) {
        this.readOnly = readOnly;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V1beta2SparkApplicationSpecPersistentVolumeClaim v1beta2SparkApplicationSpecPersistentVolumeClaim =
                (V1beta2SparkApplicationSpecPersistentVolumeClaim) o;
        return Objects.equals(this.claimName, v1beta2SparkApplicationSpecPersistentVolumeClaim.claimName) &&
                Objects.equals(this.readOnly, v1beta2SparkApplicationSpecPersistentVolumeClaim.readOnly);
    }

    @Override
    public int hashCode() {
        return Objects.hash(claimName, readOnly);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class V1beta2SparkApplicationSpecPersistentVolumeClaim {\n");
        sb.append("    claimName: ").append(toIndentedString(claimName)).append("\n");
        sb.append("    readOnly: ").append(toIndentedString(readOnly)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

